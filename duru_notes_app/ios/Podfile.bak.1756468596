# Global platform (minimum iOS version)
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Build with static frameworks and modular headers (works best with Flutter).
use_frameworks! :linkage => :static
use_modular_headers!

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# ---- Flutter boilerplate (do not change) ----
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup
# --------------------------------------------

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Apply settings to the user project (Runner + any extensions)
  installer.aggregate_targets.each do |aggregate|
    aggregate.user_project.native_targets.each do |t|
      t.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'

        # Do NOT exclude arm64 on Apple''‘silicon simulators
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''

        # Keep Swift 5 mode and make Swift''‘6 checks non''‘breaking
        config.build_settings['SWIFT_VERSION'] = '5.0'
        config.build_settings['SWIFT_STRICT_CONCURRENCY'] = 'minimal'
        # Clear any pod''‘added Swift 6 upcoming features
        config.build_settings['SWIFT_UPCOMING_FEATURES'] = ''
      end
    end
  end

  # Apply settings to every Pod target
  installer.pods_project.targets.each do |t|
    # Flutter'''s defaults (bitcode off, etc.)
    flutter_additional_ios_build_settings(t)

    t.build_configurations.each do |config|
      # Minimum target
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'

      # Do NOT exclude arm64 for the simulator
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''

      # Force Swift 5 language mode and relax Swift''‘6 strictness
      config.build_settings['SWIFT_VERSION'] = '5.0'
      config.build_settings['SWIFT_STRICT_CONCURRENCY'] = 'minimal'
      config.build_settings['SWIFT_UPCOMING_FEATURES'] = ''

      # Keep modules usable when linking statically
      config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['DEFINES_MODULE'] = 'YES'
    end
  end

  # Needed by newer Flutter podhelpers
  flutter_post_install(installer)
end

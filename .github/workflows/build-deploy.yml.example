name: Build and Deploy

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main

env:
  FLUTTER_VERSION: '3.x'
  JAVA_VERSION: '17'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Check formatting
        run: dart format --set-exit-if-changed .

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ADAPTY_PUBLIC_KEY: ${{ secrets.ADAPTY_PUBLIC_KEY }}
        run: |
          flutter build apk --release \
            --dart-define=SUPABASE_URL=$SUPABASE_URL \
            --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY \
            --dart-define=SENTRY_DSN=$SENTRY_DSN \
            --dart-define=ADAPTY_PUBLIC_KEY=$ADAPTY_PUBLIC_KEY

      - name: Build App Bundle
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ADAPTY_PUBLIC_KEY: ${{ secrets.ADAPTY_PUBLIC_KEY }}
        run: |
          flutter build appbundle --release \
            --dart-define=SUPABASE_URL=$SUPABASE_URL \
            --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY \
            --dart-define=SENTRY_DSN=$SENTRY_DSN \
            --dart-define=ADAPTY_PUBLIC_KEY=$ADAPTY_PUBLIC_KEY

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    needs: test
    runs-on: macos-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (No Code Signing)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ADAPTY_PUBLIC_KEY: ${{ secrets.ADAPTY_PUBLIC_KEY }}
        run: |
          flutter build ios --release --no-codesign \
            --dart-define=SUPABASE_URL=$SUPABASE_URL \
            --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY \
            --dart-define=SENTRY_DSN=$SENTRY_DSN \
            --dart-define=ADAPTY_PUBLIC_KEY=$ADAPTY_PUBLIC_KEY

  deploy-edge-functions:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Deploy Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase functions deploy --project-ref $SUPABASE_PROJECT_ID

  deploy-to-play-store:
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'

    steps:
      - uses: actions/checkout@v4

      - name: Download App Bundle
        uses: actions/download-artifact@v3
        with:
          name: android-appbundle
          path: ./

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}
          packageName: com.durunotes.app
          releaseFiles: app-release.aab
          track: internal
          status: draft

  notify-deployment:
    needs: [deploy-to-play-store, deploy-edge-functions]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send Slack notification
        if: env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"ðŸš€ Deployment to production completed!"}' \
            $SLACK_WEBHOOK_URL
// Mocks generated by Mockito 5.4.6 from annotations
// in duru_notes/test/features/folders/folder_undo_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:duru_notes/data/local/app_db.dart' as _i2;
import 'package:duru_notes/repository/folder_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAppDb_0 extends _i1.SmartFake implements _i2.AppDb {
  _FakeAppDb_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalFolder_1 extends _i1.SmartFake implements _i2.LocalFolder {
  _FakeLocalFolder_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FolderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFolderRepository extends _i1.Mock implements _i3.FolderRepository {
  MockFolderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppDb get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeAppDb_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.AppDb);

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  _i5.Stream<void> get folderUpdates => (super.noSuchMethod(
        Invocation.getter(#folderUpdates),
        returnValue: _i5.Stream<void>.empty(),
      ) as _i5.Stream<void>);

  @override
  _i5.Stream<List<_i2.LocalFolder>> watchFolders({String? parentId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchFolders,
          [],
          {#parentId: parentId},
        ),
        returnValue: _i5.Stream<List<_i2.LocalFolder>>.empty(),
      ) as _i5.Stream<List<_i2.LocalFolder>>);

  @override
  _i5.Stream<List<_i2.LocalFolder>> watchAllFolders() => (super.noSuchMethod(
        Invocation.method(
          #watchAllFolders,
          [],
        ),
        returnValue: _i5.Stream<List<_i2.LocalFolder>>.empty(),
      ) as _i5.Stream<List<_i2.LocalFolder>>);

  @override
  _i5.Future<_i2.LocalFolder?> createLocalFolder({
    required String? name,
    String? id,
    String? parentId,
    String? color,
    String? icon,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLocalFolder,
          [],
          {
            #name: name,
            #id: id,
            #parentId: parentId,
            #color: color,
            #icon: icon,
            #description: description,
          },
        ),
        returnValue: _i5.Future<_i2.LocalFolder?>.value(),
      ) as _i5.Future<_i2.LocalFolder?>);

  @override
  _i5.Future<bool> updateLocalFolder({
    required String? id,
    required String? name,
    String? parentId,
    String? color,
    String? icon,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocalFolder,
          [],
          {
            #id: id,
            #name: name,
            #parentId: parentId,
            #color: color,
            #icon: icon,
            #description: description,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> deleteLocalFolder(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteLocalFolder,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i2.LocalFolder?> getFolderById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getFolderById,
          [id],
        ),
        returnValue: _i5.Future<_i2.LocalFolder?>.value(),
      ) as _i5.Future<_i2.LocalFolder?>);

  @override
  _i5.Future<List<_i2.LocalFolder>> getAllFolders() => (super.noSuchMethod(
        Invocation.method(
          #getAllFolders,
          [],
        ),
        returnValue:
            _i5.Future<List<_i2.LocalFolder>>.value(<_i2.LocalFolder>[]),
      ) as _i5.Future<List<_i2.LocalFolder>>);

  @override
  _i5.Future<_i2.LocalFolder> createFolder({
    required String? name,
    String? parentId,
    String? color,
    String? icon,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFolder,
          [],
          {
            #name: name,
            #parentId: parentId,
            #color: color,
            #icon: icon,
            #description: description,
          },
        ),
        returnValue: _i5.Future<_i2.LocalFolder>.value(_FakeLocalFolder_1(
          this,
          Invocation.method(
            #createFolder,
            [],
            {
              #name: name,
              #parentId: parentId,
              #color: color,
              #icon: icon,
              #description: description,
            },
          ),
        )),
      ) as _i5.Future<_i2.LocalFolder>);

  @override
  _i5.Future<void> renameFolder({
    required String? folderId,
    required String? newName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #renameFolder,
          [],
          {
            #folderId: folderId,
            #newName: newName,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> moveFolder({
    required String? folderId,
    String? newParentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveFolder,
          [],
          {
            #folderId: folderId,
            #newParentId: newParentId,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteFolder({
    required String? folderId,
    bool? moveNotesToInbox = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFolder,
          [],
          {
            #folderId: folderId,
            #moveNotesToInbox: moveNotesToInbox,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> reorderSiblings({
    required String? parentId,
    required List<String>? orderedFolderIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reorderSiblings,
          [],
          {
            #parentId: parentId,
            #orderedFolderIds: orderedFolderIds,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> moveNoteToFolder({
    required String? noteId,
    String? folderId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveNoteToFolder,
          [],
          {
            #noteId: noteId,
            #folderId: folderId,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i2.LocalNote>> watchNotesInFolder({
    required _i3.FolderSortSpec? sort,
    String? folderId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNotesInFolder,
          [],
          {
            #sort: sort,
            #folderId: folderId,
          },
        ),
        returnValue: _i5.Stream<List<_i2.LocalNote>>.empty(),
      ) as _i5.Stream<List<_i2.LocalNote>>);

  @override
  _i5.Future<List<_i2.LocalFolder>> getFolderBreadcrumbs(String? folderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFolderBreadcrumbs,
          [folderId],
        ),
        returnValue:
            _i5.Future<List<_i2.LocalFolder>>.value(<_i2.LocalFolder>[]),
      ) as _i5.Future<List<_i2.LocalFolder>>);

  @override
  _i5.Future<Map<String, dynamic>> getFolderStats(String? folderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFolderStats,
          [folderId],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<_i2.LocalFolder>> searchFolders(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchFolders,
          [query],
        ),
        returnValue:
            _i5.Future<List<_i2.LocalFolder>>.value(<_i2.LocalFolder>[]),
      ) as _i5.Future<List<_i2.LocalFolder>>);

  @override
  _i5.Future<void> pushAllPending() => (super.noSuchMethod(
        Invocation.method(
          #pushAllPending,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

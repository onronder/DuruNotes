// Mocks generated by Mockito 5.4.6 from annotations
// in duru_notes/test/services/deep_linking_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i4;
import 'package:duru_notes/core/crypto/crypto_box.dart' as _i6;
import 'package:duru_notes/data/local/app_db.dart' as _i3;
import 'package:duru_notes/data/remote/supabase_note_api.dart' as _i7;
import 'package:duru_notes/repository/notes_repository.dart' as _i10;
import 'package:duru_notes/services/task_reminder_bridge.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:supabase_flutter/supabase_flutter.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppDbManager_1 extends _i1.SmartFake implements _i3.$AppDbManager {
  _Fake$AppDbManager_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$LocalNotesTable_2 extends _i1.SmartFake
    implements _i3.$LocalNotesTable {
  _Fake$LocalNotesTable_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PendingOpsTable_3 extends _i1.SmartFake
    implements _i3.$PendingOpsTable {
  _Fake$PendingOpsTable_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteTagsTable_4 extends _i1.SmartFake
    implements _i3.$NoteTagsTable {
  _Fake$NoteTagsTable_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteLinksTable_5 extends _i1.SmartFake
    implements _i3.$NoteLinksTable {
  _Fake$NoteLinksTable_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteRemindersTable_6 extends _i1.SmartFake
    implements _i3.$NoteRemindersTable {
  _Fake$NoteRemindersTable_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteTasksTable_7 extends _i1.SmartFake
    implements _i3.$NoteTasksTable {
  _Fake$NoteTasksTable_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$LocalFoldersTable_8 extends _i1.SmartFake
    implements _i3.$LocalFoldersTable {
  _Fake$LocalFoldersTable_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteFoldersTable_9 extends _i1.SmartFake
    implements _i3.$NoteFoldersTable {
  _Fake$NoteFoldersTable_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SavedSearchesTable_10 extends _i1.SmartFake
    implements _i3.$SavedSearchesTable {
  _Fake$SavedSearchesTable_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$LocalTemplatesTable_11 extends _i1.SmartFake
    implements _i3.$LocalTemplatesTable {
  _Fake$LocalTemplatesTable_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_12 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_13 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_14 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_15 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_16 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_17 extends _i1.SmartFake
    implements _i4.StreamQueryStore {
  _FakeStreamQueryStore_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_18 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExpression_19<D extends Object> extends _i1.SmartFake
    implements _i2.Expression<D> {
  _FakeExpression_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_20 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_21<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_22<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_23<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_24<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake
    implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_25<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_26<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_27<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_28<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_29 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppDb_30 extends _i1.SmartFake implements _i3.AppDb {
  _FakeAppDb_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCryptoBox_31 extends _i1.SmartFake implements _i6.CryptoBox {
  _FakeCryptoBox_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseNoteApi_32 extends _i1.SmartFake
    implements _i7.SupabaseNoteApi {
  _FakeSupabaseNoteApi_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseClient_33 extends _i1.SmartFake
    implements _i8.SupabaseClient {
  _FakeSupabaseClient_33(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocalFolder_34 extends _i1.SmartFake implements _i3.LocalFolder {
  _FakeLocalFolder_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppDb].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDb extends _i1.Mock implements _i3.AppDb {
  MockAppDb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);

  @override
  _i2.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_0(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i2.MigrationStrategy);

  @override
  _i3.$AppDbManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$AppDbManager_1(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i3.$AppDbManager);

  @override
  _i3.$LocalNotesTable get localNotes =>
      (super.noSuchMethod(
            Invocation.getter(#localNotes),
            returnValue: _Fake$LocalNotesTable_2(
              this,
              Invocation.getter(#localNotes),
            ),
          )
          as _i3.$LocalNotesTable);

  @override
  _i3.$PendingOpsTable get pendingOps =>
      (super.noSuchMethod(
            Invocation.getter(#pendingOps),
            returnValue: _Fake$PendingOpsTable_3(
              this,
              Invocation.getter(#pendingOps),
            ),
          )
          as _i3.$PendingOpsTable);

  @override
  _i3.$NoteTagsTable get noteTags =>
      (super.noSuchMethod(
            Invocation.getter(#noteTags),
            returnValue: _Fake$NoteTagsTable_4(
              this,
              Invocation.getter(#noteTags),
            ),
          )
          as _i3.$NoteTagsTable);

  @override
  _i3.$NoteLinksTable get noteLinks =>
      (super.noSuchMethod(
            Invocation.getter(#noteLinks),
            returnValue: _Fake$NoteLinksTable_5(
              this,
              Invocation.getter(#noteLinks),
            ),
          )
          as _i3.$NoteLinksTable);

  @override
  _i3.$NoteRemindersTable get noteReminders =>
      (super.noSuchMethod(
            Invocation.getter(#noteReminders),
            returnValue: _Fake$NoteRemindersTable_6(
              this,
              Invocation.getter(#noteReminders),
            ),
          )
          as _i3.$NoteRemindersTable);

  @override
  _i3.$NoteTasksTable get noteTasks =>
      (super.noSuchMethod(
            Invocation.getter(#noteTasks),
            returnValue: _Fake$NoteTasksTable_7(
              this,
              Invocation.getter(#noteTasks),
            ),
          )
          as _i3.$NoteTasksTable);

  @override
  _i3.$LocalFoldersTable get localFolders =>
      (super.noSuchMethod(
            Invocation.getter(#localFolders),
            returnValue: _Fake$LocalFoldersTable_8(
              this,
              Invocation.getter(#localFolders),
            ),
          )
          as _i3.$LocalFoldersTable);

  @override
  _i3.$NoteFoldersTable get noteFolders =>
      (super.noSuchMethod(
            Invocation.getter(#noteFolders),
            returnValue: _Fake$NoteFoldersTable_9(
              this,
              Invocation.getter(#noteFolders),
            ),
          )
          as _i3.$NoteFoldersTable);

  @override
  _i3.$SavedSearchesTable get savedSearches =>
      (super.noSuchMethod(
            Invocation.getter(#savedSearches),
            returnValue: _Fake$SavedSearchesTable_10(
              this,
              Invocation.getter(#savedSearches),
            ),
          )
          as _i3.$SavedSearchesTable);

  @override
  _i3.$LocalTemplatesTable get localTemplates =>
      (super.noSuchMethod(
            Invocation.getter(#localTemplates),
            returnValue: _Fake$LocalTemplatesTable_11(
              this,
              Invocation.getter(#localTemplates),
            ),
          )
          as _i3.$LocalTemplatesTable);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
          )
          as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i2.DatabaseSchemaEntity>[],
          )
          as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_12(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i2.GeneratedDatabase);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_13(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_14(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i2.StreamQueryUpdateRules);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_15(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i9.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_16(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i4.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_17(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i4.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_18(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i2.Expression<bool> noteIsVisible(_i3.LocalNotes? t) =>
      (super.noSuchMethod(
            Invocation.method(#noteIsVisible, [t]),
            returnValue: _FakeExpression_19<bool>(
              this,
              Invocation.method(#noteIsVisible, [t]),
            ),
          )
          as _i2.Expression<bool>);

  @override
  _i5.Future<List<_i3.LocalNote>> suggestNotesByTitlePrefix(
    String? query, {
    int? limit = 8,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #suggestNotesByTitlePrefix,
              [query],
              {#limit: limit},
            ),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> allNotes() =>
      (super.noSuchMethod(
            Invocation.method(#allNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesAfter({
    required DateTime? cursor,
    required int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#notesAfter, [], {
              #cursor: cursor,
              #limit: limit,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> pagedNotes({
    required int? limit,
    required int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pagedNotes, [], {
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> allNotesWithPinned() =>
      (super.noSuchMethod(
            Invocation.method(#allNotesWithPinned, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> getPinnedNotes() =>
      (super.noSuchMethod(
            Invocation.method(#getPinnedNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> toggleNotePin(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleNotePin, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setNotePin(String? noteId, bool? isPinned) =>
      (super.noSuchMethod(
            Invocation.method(#setNotePin, [noteId, isPinned]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> getNotesInFolderWithPinned(
    String? folderId, {
    int? limit,
    DateTime? cursor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getNotesInFolderWithPinned,
              [folderId],
              {#limit: limit, #cursor: cursor},
            ),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> upsertNote(_i3.LocalNote? n) =>
      (super.noSuchMethod(
            Invocation.method(#upsertNote, [n]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.LocalNote?> findNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#findNote, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<int> enqueue(String? entityId, String? kind, {String? payload}) =>
      (super.noSuchMethod(
            Invocation.method(#enqueue, [entityId, kind], {#payload: payload}),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.PendingOp>> getPendingOps() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingOps, []),
            returnValue: _i5.Future<List<_i3.PendingOp>>.value(
              <_i3.PendingOp>[],
            ),
          )
          as _i5.Future<List<_i3.PendingOp>>);

  @override
  _i5.Future<void> deletePendingByIds(Iterable<int>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#deletePendingByIds, [ids]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.PendingOp>> dequeueAll() =>
      (super.noSuchMethod(
            Invocation.method(#dequeueAll, []),
            returnValue: _i5.Future<List<_i3.PendingOp>>.value(
              <_i3.PendingOp>[],
            ),
          )
          as _i5.Future<List<_i3.PendingOp>>);

  @override
  _i5.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Set<String>> getLocalActiveNoteIds() =>
      (super.noSuchMethod(
            Invocation.method(#getLocalActiveNoteIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<void> replaceTagsForNote(String? noteId, Set<String>? tags) =>
      (super.noSuchMethod(
            Invocation.method(#replaceTagsForNote, [noteId, tags]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> replaceLinksForNote(
    String? noteId,
    List<Map<String, String?>>? links,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#replaceLinksForNote, [noteId, links]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> distinctTags() =>
      (super.noSuchMethod(
            Invocation.method(#distinctTags, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i3.TagCount>> getTagsWithCounts() =>
      (super.noSuchMethod(
            Invocation.method(#getTagsWithCounts, []),
            returnValue: _i5.Future<List<_i3.TagCount>>.value(<_i3.TagCount>[]),
          )
          as _i5.Future<List<_i3.TagCount>>);

  @override
  _i5.Future<void> addTagToNote(String? noteId, String? rawTag) =>
      (super.noSuchMethod(
            Invocation.method(#addTagToNote, [noteId, rawTag]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeTagFromNote(String? noteId, String? rawTag) =>
      (super.noSuchMethod(
            Invocation.method(#removeTagFromNote, [noteId, rawTag]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<int> renameTagEverywhere(String? fromRaw, String? toRaw) =>
      (super.noSuchMethod(
            Invocation.method(#renameTagEverywhere, [fromRaw, toRaw]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesByTags({
    required List<String>? anyTags,
    required _i3.SortSpec? sort,
    List<String>? noneTags = const [],
  }) =>
      (super.noSuchMethod(
            Invocation.method(#notesByTags, [], {
              #anyTags: anyTags,
              #sort: sort,
              #noneTags: noneTags,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<String>> searchTags(String? prefix) =>
      (super.noSuchMethod(
            Invocation.method(#searchTags, [prefix]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesWithTag(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#notesWithTag, [tag]),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> debugMetadata() =>
      (super.noSuchMethod(
            Invocation.method(#debugMetadata, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesForSavedSearch({
    required String? savedSearchKey,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#notesForSavedSearch, [], {
              #savedSearchKey: savedSearchKey,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.BacklinkPair>> backlinksWithSources(
    String? targetTitle,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#backlinksWithSources, [targetTitle]),
            returnValue: _i5.Future<List<_i3.BacklinkPair>>.value(
              <_i3.BacklinkPair>[],
            ),
          )
          as _i5.Future<List<_i3.BacklinkPair>>);

  @override
  _i5.Future<List<_i3.LocalNote>> searchNotes(String? raw) =>
      (super.noSuchMethod(
            Invocation.method(#searchNotes, [raw]),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getRemindersForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getRemindersForNote, [noteId]),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getActiveReminders() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveReminders, []),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<_i3.NoteReminder?> getReminderById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getReminderById, [id]),
            returnValue: _i5.Future<_i3.NoteReminder?>.value(),
          )
          as _i5.Future<_i3.NoteReminder?>);

  @override
  _i5.Future<int> createReminder(_i3.NoteRemindersCompanion? reminder) =>
      (super.noSuchMethod(
            Invocation.method(#createReminder, [reminder]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> updateReminder(
    int? id,
    _i3.NoteRemindersCompanion? updates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateReminder, [id, updates]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteReminderById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteReminderById, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteRemindersForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRemindersForNote, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getTimeRemindersToTrigger({
    required DateTime? before,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTimeRemindersToTrigger, [], {
              #before: before,
            }),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getLocationReminders() =>
      (super.noSuchMethod(
            Invocation.method(#getLocationReminders, []),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getRecurringReminders() =>
      (super.noSuchMethod(
            Invocation.method(#getRecurringReminders, []),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getTasksForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getTasksForNote, [noteId]),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<_i3.NoteTask?> getTaskById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTaskById, [id]),
            returnValue: _i5.Future<_i3.NoteTask?>.value(),
          )
          as _i5.Future<_i3.NoteTask?>);

  @override
  _i5.Future<List<_i3.NoteTask>> getOpenTasks({
    DateTime? dueBefore,
    _i3.TaskPriority? priority,
    String? parentTaskId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOpenTasks, [], {
              #dueBefore: dueBefore,
              #priority: priority,
              #parentTaskId: parentTaskId,
            }),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getTasksByDateRange({
    required DateTime? start,
    required DateTime? end,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTasksByDateRange, [], {
              #start: start,
              #end: end,
            }),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getOverdueTasks() =>
      (super.noSuchMethod(
            Invocation.method(#getOverdueTasks, []),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getAllTasks() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTasks, []),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getCompletedTasks({
    DateTime? since,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCompletedTasks, [], {
              #since: since,
              #limit: limit,
            }),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<void> createTask(_i3.NoteTasksCompanion? task) =>
      (super.noSuchMethod(
            Invocation.method(#createTask, [task]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateTask(String? id, _i3.NoteTasksCompanion? updates) =>
      (super.noSuchMethod(
            Invocation.method(#updateTask, [id, updates]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> completeTask(String? id, {String? completedBy}) =>
      (super.noSuchMethod(
            Invocation.method(#completeTask, [id], {#completedBy: completedBy}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> toggleTaskStatus(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#toggleTaskStatus, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTaskById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTaskById, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTasksForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTasksForNote, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> syncTasksWithNoteContent(
    String? noteId,
    String? noteContent,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#syncTasksWithNoteContent, [noteId, noteContent]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i3.NoteTask>> watchOpenTasks() =>
      (super.noSuchMethod(
            Invocation.method(#watchOpenTasks, []),
            returnValue: _i5.Stream<List<_i3.NoteTask>>.empty(),
          )
          as _i5.Stream<List<_i3.NoteTask>>);

  @override
  _i5.Stream<List<_i3.NoteTask>> watchTasksForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#watchTasksForNote, [noteId]),
            returnValue: _i5.Stream<List<_i3.NoteTask>>.empty(),
          )
          as _i5.Stream<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getSnoozedRemindersToReschedule({
    required DateTime? now,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSnoozedRemindersToReschedule, [], {
              #now: now,
            }),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<void> markReminderTriggered(int? id, {DateTime? triggeredAt}) =>
      (super.noSuchMethod(
            Invocation.method(
              #markReminderTriggered,
              [id],
              {#triggeredAt: triggeredAt},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> snoozeReminder(int? id, DateTime? snoozeUntil) =>
      (super.noSuchMethod(
            Invocation.method(#snoozeReminder, [id, snoozeUntil]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clearSnooze(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#clearSnooze, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deactivateReminder(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deactivateReminder, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getAllReminders({
    bool? activeOnly = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllReminders, [], {#activeOnly: activeOnly}),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<void> cleanupOrphanedReminders() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupOrphanedReminders, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, int>> getReminderStats() =>
      (super.noSuchMethod(
            Invocation.method(#getReminderStats, []),
            returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getRootFolders() =>
      (super.noSuchMethod(
            Invocation.method(#getRootFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getChildFolders(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getChildFolders, [parentId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<_i3.LocalFolder?> getFolderById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderById, [id]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<void> upsertFolder(_i3.LocalFolder? folder) =>
      (super.noSuchMethod(
            Invocation.method(#upsertFolder, [folder]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<int> getNotesCountInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNotesCountInFolder, [folderId]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.LocalNote>> getNotesInFolder(
    String? folderId, {
    int? limit,
    DateTime? cursor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getNotesInFolder,
              [folderId],
              {#limit: limit, #cursor: cursor},
            ),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<Map<String, int>> getFolderNoteCounts() =>
      (super.noSuchMethod(
            Invocation.method(#getFolderNoteCounts, []),
            returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<void> cleanupOrphanedRelationships() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupOrphanedRelationships, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.LocalNote?> getNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNote, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Stream<_i3.LocalNote?> watchNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchNote, [id]),
            returnValue: _i5.Stream<_i3.LocalNote?>.empty(),
          )
          as _i5.Stream<_i3.LocalNote?>);

  @override
  _i5.Future<void> updateNote(String? id, _i3.LocalNotesCompanion? updates) =>
      (super.noSuchMethod(
            Invocation.method(#updateNote, [id, updates]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> getUnfiledNotes({
    int? limit,
    DateTime? cursor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUnfiledNotes, [], {
              #limit: limit,
              #cursor: cursor,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> moveNoteToFolder(String? noteId, String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#moveNoteToFolder, [noteId, folderId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getNoteIdsInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteIdsInFolder, [folderId]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.LocalFolder?> getNoteFolder(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteFolder, [noteId]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<String> generateFolderPath(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#generateFolderPath, [folderId]),
            returnValue: _i5.Future<String>.value(
              _i9.dummyValue<String>(
                this,
                Invocation.method(#generateFolderPath, [folderId]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i3.LocalFolder?> findFolder(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#findFolder, [id]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<List<_i3.LocalFolder>> allFolders() =>
      (super.noSuchMethod(
            Invocation.method(#allFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getActiveFolders() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<_i3.LocalFolder?> getFolderForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderForNote, [noteId]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<void> removeNoteFromFolder(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#removeNoteFromFolder, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> upsertNoteFolder(_i3.NoteFolder? relationship) =>
      (super.noSuchMethod(
            Invocation.method(#upsertNoteFolder, [relationship]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteFolder>> getAllNoteFolderRelationships() =>
      (super.noSuchMethod(
            Invocation.method(#getAllNoteFolderRelationships, []),
            returnValue: _i5.Future<List<_i3.NoteFolder>>.value(
              <_i3.NoteFolder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteFolder>>);

  @override
  _i5.Future<Set<String>> getActiveNoteIds() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveNoteIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<Set<String>> getLocalActiveFolderIds() =>
      (super.noSuchMethod(
            Invocation.method(#getLocalActiveFolderIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getRecentlyUpdatedFolders({
    required DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentlyUpdatedFolders, [], {#since: since}),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getFoldersByParent(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getFoldersByParent, [parentId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<int> countNotesInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#countNotesInFolder, [folderId]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> getFolderDepth(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderDepth, [folderId]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<bool> hasChildFolders(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#hasChildFolders, [folderId]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getFolderSubtree(String? rootId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderSubtree, [rootId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> searchFolders(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchFolders, [query]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<_i3.LocalFolder?> findFolderByName(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#findFolderByName, [name]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<void> upsertSavedSearch(_i3.SavedSearch? search) =>
      (super.noSuchMethod(
            Invocation.method(#upsertSavedSearch, [search]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearches, []),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getSavedSearchesByType(
    String? searchType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearchesByType, [searchType]),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Future<_i3.SavedSearch?> getSavedSearchById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearchById, [id]),
            returnValue: _i5.Future<_i3.SavedSearch?>.value(),
          )
          as _i5.Future<_i3.SavedSearch?>);

  @override
  _i5.Future<void> deleteSavedSearch(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSavedSearch, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateSavedSearchUsage(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#updateSavedSearchUsage, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> toggleSavedSearchPin(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#toggleSavedSearchPin, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> reorderSavedSearches(List<String>? orderedIds) =>
      (super.noSuchMethod(
            Invocation.method(#reorderSavedSearches, [orderedIds]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i3.SavedSearch>> watchSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#watchSavedSearches, []),
            returnValue: _i5.Stream<List<_i3.SavedSearch>>.empty(),
          )
          as _i5.Stream<List<_i3.SavedSearch>>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getPinnedSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#getPinnedSavedSearches, []),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Future<List<_i3.LocalTemplate>> getAllTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalTemplate>>.value(
              <_i3.LocalTemplate>[],
            ),
          )
          as _i5.Future<List<_i3.LocalTemplate>>);

  @override
  _i5.Future<List<_i3.LocalTemplate>> getSystemTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getSystemTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalTemplate>>.value(
              <_i3.LocalTemplate>[],
            ),
          )
          as _i5.Future<List<_i3.LocalTemplate>>);

  @override
  _i5.Future<List<_i3.LocalTemplate>> getUserTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getUserTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalTemplate>>.value(
              <_i3.LocalTemplate>[],
            ),
          )
          as _i5.Future<List<_i3.LocalTemplate>>);

  @override
  _i5.Future<_i3.LocalTemplate?> getTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTemplate, [id]),
            returnValue: _i5.Future<_i3.LocalTemplate?>.value(),
          )
          as _i5.Future<_i3.LocalTemplate?>);

  @override
  _i5.Future<void> upsertTemplate(_i3.LocalTemplate? template) =>
      (super.noSuchMethod(
            Invocation.method(#upsertTemplate, [template]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> deleteTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTemplate, [id]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i2.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_20(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i2.Migrator);

  @override
  _i5.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<T> createStream<T extends Object>(
    _i4.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i5.Stream<T>.empty(),
          )
          as _i5.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i9.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i5.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i5.Stream<Set<_i2.TableUpdate>>);

  @override
  _i5.Future<T> doWhenOpened<T>(
    _i5.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i9.ifNotNull(
                  _i9.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i5.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_22<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_23<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_24<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_25<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_26<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_27<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i5.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
          )
          as _i5.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_28<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_28<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i5.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i9.ifNotNull(
                  _i9.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i5.Future<T>);

  @override
  _i5.Future<T> exclusively<T>(_i5.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i9.ifNotNull(
                  _i9.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i5.Future<T>);

  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<T> runWithInterceptor<T>(
    _i5.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i9.ifNotNull(
                  _i9.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i5.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_29(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_29(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}

/// A class which mocks [NotesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotesRepository extends _i1.Mock implements _i10.NotesRepository {
  MockNotesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDb get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDb_30(this, Invocation.getter(#db)),
          )
          as _i3.AppDb);

  @override
  _i6.CryptoBox get crypto =>
      (super.noSuchMethod(
            Invocation.getter(#crypto),
            returnValue: _FakeCryptoBox_31(this, Invocation.getter(#crypto)),
          )
          as _i6.CryptoBox);

  @override
  _i7.SupabaseNoteApi get api =>
      (super.noSuchMethod(
            Invocation.getter(#api),
            returnValue: _FakeSupabaseNoteApi_32(this, Invocation.getter(#api)),
          )
          as _i7.SupabaseNoteApi);

  @override
  _i8.SupabaseClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeSupabaseClient_33(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i8.SupabaseClient);

  @override
  _i5.Future<void> createOrUpdateSavedSearch(_i3.SavedSearch? savedSearch) =>
      (super.noSuchMethod(
            Invocation.method(#createOrUpdateSavedSearch, [savedSearch]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteSavedSearch(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSavedSearch, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearches, []),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Stream<List<_i3.SavedSearch>> watchSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#watchSavedSearches, []),
            returnValue: _i5.Stream<List<_i3.SavedSearch>>.empty(),
          )
          as _i5.Stream<List<_i3.SavedSearch>>);

  @override
  _i5.Future<void> toggleSavedSearchPin(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#toggleSavedSearchPin, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> trackSavedSearchUsage(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#trackSavedSearchUsage, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> reorderSavedSearches(List<String>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#reorderSavedSearches, [ids]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> executeSavedSearch(
    _i3.SavedSearch? savedSearch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#executeSavedSearch, [savedSearch]),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> toggleNotePin(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleNotePin, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setNotePin(String? noteId, bool? isPinned) =>
      (super.noSuchMethod(
            Invocation.method(#setNotePin, [noteId, isPinned]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> getPinnedNotes() =>
      (super.noSuchMethod(
            Invocation.method(#getPinnedNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.TagCount>> listTagsWithCounts() =>
      (super.noSuchMethod(
            Invocation.method(#listTagsWithCounts, []),
            returnValue: _i5.Future<List<_i3.TagCount>>.value(<_i3.TagCount>[]),
          )
          as _i5.Future<List<_i3.TagCount>>);

  @override
  _i5.Future<void> addTag({required String? noteId, required String? tag}) =>
      (super.noSuchMethod(
            Invocation.method(#addTag, [], {#noteId: noteId, #tag: tag}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeTag({required String? noteId, required String? tag}) =>
      (super.noSuchMethod(
            Invocation.method(#removeTag, [], {#noteId: noteId, #tag: tag}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<int> renameTagEverywhere({
    required String? from,
    required String? to,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#renameTagEverywhere, [], {#from: from, #to: to}),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.LocalNote>> queryNotesByTags({
    required List<String>? anyTags,
    required _i3.SortSpec? sort,
    List<String>? noneTags = const [],
  }) =>
      (super.noSuchMethod(
            Invocation.method(#queryNotesByTags, [], {
              #anyTags: anyTags,
              #sort: sort,
              #noneTags: noneTags,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<String>> searchTags(String? prefix) =>
      (super.noSuchMethod(
            Invocation.method(#searchTags, [prefix]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<String>> getTagsForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getTagsForNote, [noteId]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.LocalNote?> getLocalNoteById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getLocalNoteById, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<_i3.LocalNote?> getNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNote, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<_i3.LocalNote?> getNoteById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteById, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<_i3.LocalNote?> createNote({
    required String? title,
    required String? body,
    String? folderId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createNote, [], {
              #title: title,
              #body: body,
              #folderId: folderId,
            }),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<_i3.LocalNote?> updateNote(
    String? id, {
    required String? title,
    required String? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateNote, [id], {#title: title, #body: body}),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<_i3.LocalNote?> createOrUpdate({
    required String? title,
    required String? body,
    String? id,
    DateTime? updatedAt,
    Set<String>? tags = const {},
    List<Map<String, String?>>? links = const [],
    Map<String, dynamic>? attachmentMeta,
    Map<String, dynamic>? metadataJson,
    bool? isPinned,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOrUpdate, [], {
              #title: title,
              #body: body,
              #id: id,
              #updatedAt: updatedAt,
              #tags: tags,
              #links: links,
              #attachmentMeta: attachmentMeta,
              #metadataJson: metadataJson,
              #isPinned: isPinned,
            }),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<List<_i3.LocalNote>> getRecentlyViewedNotes({int? limit = 5}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentlyViewedNotes, [], {#limit: limit}),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> localNotes() =>
      (super.noSuchMethod(
            Invocation.method(#localNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> listAfter(
    DateTime? cursor, {
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listAfter, [cursor], {#limit: limit}),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> updateLocalNote(
    String? id, {
    String? title,
    String? body,
    bool? deleted,
    DateTime? updatedAt,
    Map<String, dynamic>? attachmentMeta,
    Set<String>? tags,
    List<Map<String, String?>>? links,
    bool? isPinned,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateLocalNote,
              [id],
              {
                #title: title,
                #body: body,
                #deleted: deleted,
                #updatedAt: updatedAt,
                #attachmentMeta: attachmentMeta,
                #tags: tags,
                #links: links,
                #isPinned: isPinned,
              },
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNote, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> delete(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> listTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#listTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<_i3.LocalNote?> createTemplate({
    required String? title,
    required String? body,
    List<String>? tags = const [],
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createTemplate, [], {
              #title: title,
              #body: body,
              #tags: tags,
              #metadata: metadata,
            }),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<_i3.LocalNote?> createNoteFromTemplate(String? templateId) =>
      (super.noSuchMethod(
            Invocation.method(#createNoteFromTemplate, [templateId]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<bool> deleteTemplate(String? templateId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTemplate, [templateId]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i3.LocalFolder?> getFolder(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getFolder, [id]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<List<_i3.LocalFolder>> listFolders() =>
      (super.noSuchMethod(
            Invocation.method(#listFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getRootFolders() =>
      (super.noSuchMethod(
            Invocation.method(#getRootFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<String> createOrUpdateFolder({
    required String? name,
    String? id,
    String? parentId,
    String? color,
    String? icon,
    String? description,
    int? sortOrder,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOrUpdateFolder, [], {
              #name: name,
              #id: id,
              #parentId: parentId,
              #color: color,
              #icon: icon,
              #description: description,
              #sortOrder: sortOrder,
            }),
            returnValue: _i5.Future<String>.value(
              _i9.dummyValue<String>(
                this,
                Invocation.method(#createOrUpdateFolder, [], {
                  #name: name,
                  #id: id,
                  #parentId: parentId,
                  #color: color,
                  #icon: icon,
                  #description: description,
                  #sortOrder: sortOrder,
                }),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i3.LocalFolder> createFolder({
    required String? name,
    String? parentId,
    String? color,
    String? icon,
    String? description,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createFolder, [], {
              #name: name,
              #parentId: parentId,
              #color: color,
              #icon: icon,
              #description: description,
            }),
            returnValue: _i5.Future<_i3.LocalFolder>.value(
              _FakeLocalFolder_34(
                this,
                Invocation.method(#createFolder, [], {
                  #name: name,
                  #parentId: parentId,
                  #color: color,
                  #icon: icon,
                  #description: description,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.LocalFolder>);

  @override
  _i5.Future<void> renameFolder(String? folderId, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#renameFolder, [folderId, newName]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> moveFolder(String? folderId, String? newParentId) =>
      (super.noSuchMethod(
            Invocation.method(#moveFolder, [folderId, newParentId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFolder, [folderId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> getNotesInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNotesInFolder, [folderId]),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> getUnfiledNotes() =>
      (super.noSuchMethod(
            Invocation.method(#getUnfiledNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> addNoteToFolder(String? noteId, String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#addNoteToFolder, [noteId, folderId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> moveNoteToFolder(String? noteId, String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#moveNoteToFolder, [noteId, folderId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeNoteFromFolder(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#removeNoteFromFolder, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, int>> getFolderNoteCounts() =>
      (super.noSuchMethod(
            Invocation.method(#getFolderNoteCounts, []),
            returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<void> ensureFolderIntegrity() =>
      (super.noSuchMethod(
            Invocation.method(#ensureFolderIntegrity, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.LocalFolder?> getFolderForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderForNote, [noteId]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<Map<String, dynamic>> performFolderHealthCheck() =>
      (super.noSuchMethod(
            Invocation.method(#performFolderHealthCheck, []),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> validateAndRepairFolderStructure() =>
      (super.noSuchMethod(
            Invocation.method(#validateAndRepairFolderStructure, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cleanupOrphanedRelationships() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupOrphanedRelationships, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resolveFolderConflicts() =>
      (super.noSuchMethod(
            Invocation.method(#resolveFolderConflicts, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getChildFolders(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getChildFolders, [parentId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalNote>> list({int? limit}) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {#limit: limit}),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Stream<List<_i3.LocalNote>> watchNotes({
    String? folderId,
    List<String>? anyTags,
    List<String>? noneTags,
    bool? pinnedFirst = true,
    _i3.SortSpec? sort,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watchNotes, [], {
              #folderId: folderId,
              #anyTags: anyTags,
              #noneTags: noneTags,
              #pinnedFirst: pinnedFirst,
              #sort: sort,
            }),
            returnValue: _i5.Stream<List<_i3.LocalNote>>.empty(),
          )
          as _i5.Stream<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> pushAllPending() =>
      (super.noSuchMethod(
            Invocation.method(#pushAllPending, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> pullSince(DateTime? since) =>
      (super.noSuchMethod(
            Invocation.method(#pullSince, [since]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Set<String>> fetchRemoteActiveIds() =>
      (super.noSuchMethod(
            Invocation.method(#fetchRemoteActiveIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<void> reconcileHardDeletes(Set<String>? remoteIds) =>
      (super.noSuchMethod(
            Invocation.method(#reconcileHardDeletes, [remoteIds]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> reconcile() =>
      (super.noSuchMethod(
            Invocation.method(#reconcile, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<DateTime?> getLastSyncTime() =>
      (super.noSuchMethod(
            Invocation.method(#getLastSyncTime, []),
            returnValue: _i5.Future<DateTime?>.value(),
          )
          as _i5.Future<DateTime?>);

  @override
  _i5.Future<void> sync() =>
      (super.noSuchMethod(
            Invocation.method(#sync, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [TaskReminderBridge].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskReminderBridge extends _i1.Mock
    implements _i11.TaskReminderBridge {
  MockTaskReminderBridge() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<int?> createTaskReminder({
    required _i3.NoteTask? task,
    Duration? beforeDueDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createTaskReminder, [], {
              #task: task,
              #beforeDueDate: beforeDueDate,
            }),
            returnValue: _i5.Future<int?>.value(),
          )
          as _i5.Future<int?>);

  @override
  _i5.Future<void> updateTaskReminder(_i3.NoteTask? task) =>
      (super.noSuchMethod(
            Invocation.method(#updateTaskReminder, [task]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cancelTaskReminder(_i3.NoteTask? task) =>
      (super.noSuchMethod(
            Invocation.method(#cancelTaskReminder, [task]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> snoozeTaskReminder({
    required _i3.NoteTask? task,
    required Duration? snoozeDuration,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#snoozeTaskReminder, [], {
              #task: task,
              #snoozeDuration: snoozeDuration,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> handleTaskNotificationAction({
    required String? action,
    required String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#handleTaskNotificationAction, [], {
              #action: action,
              #payload: payload,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> scheduleTaskNotification({
    required _i3.NoteTask? task,
    required DateTime? reminderTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#scheduleTaskNotification, [], {
              #task: task,
              #reminderTime: reminderTime,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> onTaskCreated(_i3.NoteTask? task) =>
      (super.noSuchMethod(
            Invocation.method(#onTaskCreated, [task]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> onTaskUpdated(
    _i3.NoteTask? oldTask,
    _i3.NoteTask? newTask,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#onTaskUpdated, [oldTask, newTask]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> onTaskDeleted(_i3.NoteTask? task) =>
      (super.noSuchMethod(
            Invocation.method(#onTaskDeleted, [task]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteTask>> getTasksWithReminders() =>
      (super.noSuchMethod(
            Invocation.method(#getTasksWithReminders, []),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<void> bulkUpdateTaskReminders(List<_i3.NoteTask>? tasks) =>
      (super.noSuchMethod(
            Invocation.method(#bulkUpdateTaskReminders, [tasks]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cleanupOrphanedReminders() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupOrphanedReminders, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

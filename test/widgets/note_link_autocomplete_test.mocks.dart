// Mocks generated by Mockito 5.4.6 from annotations
// in duru_notes/test/widgets/note_link_autocomplete_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:duru_notes/domain/entities/note.dart' as _i5;
import 'package:duru_notes/domain/repositories/i_notes_repository.dart' as _i4;
import 'package:duru_notes/services/note_link_parser.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [NoteLinkParser].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoteLinkParser extends _i1.Mock implements _i2.NoteLinkParser {
  MockNoteLinkParser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<Map<String, String?>>> extractLinks(
    String? content,
    _i4.INotesRepository? notesRepository,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#extractLinks, [content, notesRepository]),
            returnValue: _i3.Future<List<Map<String, String?>>>.value(
              <Map<String, String?>>[],
            ),
          )
          as _i3.Future<List<Map<String, String?>>>);

  @override
  _i3.Future<List<_i5.Note>> searchNotesByTitle(
    String? partialTitle,
    _i4.INotesRepository? notesRepository, {
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchNotesByTitle,
              [partialTitle, notesRepository],
              {#limit: limit},
            ),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<bool> noteExistsByTitle(
    String? title,
    _i4.INotesRepository? notesRepository,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#noteExistsByTitle, [title, notesRepository]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<List<_i5.Note>> getBacklinks(
    String? noteId,
    _i4.INotesRepository? notesRepository,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getBacklinks, [noteId, notesRepository]),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<String> replaceLinksWithMarkdown(
    String? content,
    _i4.INotesRepository? notesRepository,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#replaceLinksWithMarkdown, [
              content,
              notesRepository,
            ]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#replaceLinksWithMarkdown, [
                  content,
                  notesRepository,
                ]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  bool hasLinks(String? content) =>
      (super.noSuchMethod(
            Invocation.method(#hasLinks, [content]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Future<Map<String, dynamic>> getLinkStats(
    String? content,
    _i4.INotesRepository? notesRepository,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getLinkStats, [content, notesRepository]),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [INotesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockINotesRepository extends _i1.Mock implements _i4.INotesRepository {
  MockINotesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i5.Note?> getNoteById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteById, [id]),
            returnValue: _i3.Future<_i5.Note?>.value(),
          )
          as _i3.Future<_i5.Note?>);

  @override
  _i3.Future<_i5.Note?> createOrUpdate({
    required String? title,
    required String? body,
    String? id,
    String? folderId,
    List<String>? tags = const [],
    List<Map<String, String?>>? links = const [],
    Map<String, dynamic>? attachmentMeta,
    Map<String, dynamic>? metadataJson,
    bool? isPinned,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOrUpdate, [], {
              #title: title,
              #body: body,
              #id: id,
              #folderId: folderId,
              #tags: tags,
              #links: links,
              #attachmentMeta: attachmentMeta,
              #metadataJson: metadataJson,
              #isPinned: isPinned,
              #createdAt: createdAt,
              #updatedAt: updatedAt,
            }),
            returnValue: _i3.Future<_i5.Note?>.value(),
          )
          as _i3.Future<_i5.Note?>);

  @override
  _i3.Future<void> updateLocalNote(
    String? id, {
    String? title,
    String? body,
    bool? deleted,
    String? folderId,
    bool? updateFolder = false,
    Map<String, dynamic>? attachmentMeta,
    Map<String, dynamic>? metadata,
    List<Map<String, String?>>? links,
    bool? isPinned,
    DateTime? updatedAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateLocalNote,
              [id],
              {
                #title: title,
                #body: body,
                #deleted: deleted,
                #folderId: folderId,
                #updateFolder: updateFolder,
                #attachmentMeta: attachmentMeta,
                #metadata: metadata,
                #links: links,
                #isPinned: isPinned,
                #updatedAt: updatedAt,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNote, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.Note>> localNotesForSync() =>
      (super.noSuchMethod(
            Invocation.method(#localNotesForSync, []),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<List<_i5.Note>> localNotes() =>
      (super.noSuchMethod(
            Invocation.method(#localNotes, []),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<List<_i5.Note>> getRecentlyViewedNotes({int? limit = 5}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentlyViewedNotes, [], {#limit: limit}),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<List<_i5.Note>> listAfter(DateTime? cursor, {int? limit = 20}) =>
      (super.noSuchMethod(
            Invocation.method(#listAfter, [cursor], {#limit: limit}),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<void> toggleNotePin(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleNotePin, [noteId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setNotePin(String? noteId, bool? isPinned) =>
      (super.noSuchMethod(
            Invocation.method(#setNotePin, [noteId, isPinned]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.Note>> getPinnedNotes() =>
      (super.noSuchMethod(
            Invocation.method(#getPinnedNotes, []),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Stream<List<_i5.Note>> watchNotes({
    String? folderId,
    List<String>? anyTags,
    List<String>? noneTags,
    bool? pinnedFirst = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watchNotes, [], {
              #folderId: folderId,
              #anyTags: anyTags,
              #noneTags: noneTags,
              #pinnedFirst: pinnedFirst,
            }),
            returnValue: _i3.Stream<List<_i5.Note>>.empty(),
          )
          as _i3.Stream<List<_i5.Note>>);

  @override
  _i3.Future<List<_i5.Note>> list({int? limit}) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {#limit: limit}),
            returnValue: _i3.Future<List<_i5.Note>>.value(<_i5.Note>[]),
          )
          as _i3.Future<List<_i5.Note>>);

  @override
  _i3.Future<int> getNotesCountInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNotesCountInFolder, [folderId]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<String>> getNoteIdsInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteIdsInFolder, [folderId]),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<void> sync() =>
      (super.noSuchMethod(
            Invocation.method(#sync, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> pushAllPending() =>
      (super.noSuchMethod(
            Invocation.method(#pushAllPending, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> pullSince(DateTime? since) =>
      (super.noSuchMethod(
            Invocation.method(#pullSince, [since]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<DateTime?> getLastSyncTime() =>
      (super.noSuchMethod(
            Invocation.method(#getLastSyncTime, []),
            returnValue: _i3.Future<DateTime?>.value(),
          )
          as _i3.Future<DateTime?>);
}

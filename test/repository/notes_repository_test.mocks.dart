// Mocks generated by Mockito 5.4.6 from annotations
// in duru_notes/test/repository/notes_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:typed_data' as _i9;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i4;
import 'package:duru_notes/core/crypto/crypto_box.dart' as _i7;
import 'package:duru_notes/core/security/authorization_service.dart' as _i12;
import 'package:duru_notes/data/local/app_db.dart' as _i3;
import 'package:duru_notes/data/remote/supabase_note_api.dart' as _i10;
import 'package:duru_notes/services/fts_service.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:supabase/supabase.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppDbManager_1 extends _i1.SmartFake implements _i3.$AppDbManager {
  _Fake$AppDbManager_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$LocalNotesTable_2 extends _i1.SmartFake
    implements _i3.$LocalNotesTable {
  _Fake$LocalNotesTable_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PendingOpsTable_3 extends _i1.SmartFake
    implements _i3.$PendingOpsTable {
  _Fake$PendingOpsTable_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteTagsTable_4 extends _i1.SmartFake
    implements _i3.$NoteTagsTable {
  _Fake$NoteTagsTable_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteLinksTable_5 extends _i1.SmartFake
    implements _i3.$NoteLinksTable {
  _Fake$NoteLinksTable_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteRemindersTable_6 extends _i1.SmartFake
    implements _i3.$NoteRemindersTable {
  _Fake$NoteRemindersTable_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteTasksTable_7 extends _i1.SmartFake
    implements _i3.$NoteTasksTable {
  _Fake$NoteTasksTable_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$LocalFoldersTable_8 extends _i1.SmartFake
    implements _i3.$LocalFoldersTable {
  _Fake$LocalFoldersTable_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$NoteFoldersTable_9 extends _i1.SmartFake
    implements _i3.$NoteFoldersTable {
  _Fake$NoteFoldersTable_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SavedSearchesTable_10 extends _i1.SmartFake
    implements _i3.$SavedSearchesTable {
  _Fake$SavedSearchesTable_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$LocalTemplatesTable_11 extends _i1.SmartFake
    implements _i3.$LocalTemplatesTable {
  _Fake$LocalTemplatesTable_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AttachmentsTable_12 extends _i1.SmartFake
    implements _i3.$AttachmentsTable {
  _Fake$AttachmentsTable_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$InboxItemsTable_13 extends _i1.SmartFake
    implements _i3.$InboxItemsTable {
  _Fake$InboxItemsTable_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$QuickCaptureQueueEntriesTable_14 extends _i1.SmartFake
    implements _i3.$QuickCaptureQueueEntriesTable {
  _Fake$QuickCaptureQueueEntriesTable_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _Fake$QuickCaptureWidgetCacheEntriesTable_15 extends _i1.SmartFake
    implements _i3.$QuickCaptureWidgetCacheEntriesTable {
  _Fake$QuickCaptureWidgetCacheEntriesTable_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIndex_16 extends _i1.SmartFake implements _i2.Index {
  _FakeIndex_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_17 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_18 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_19 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_20 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_21 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_22 extends _i1.SmartFake
    implements _i4.StreamQueryStore {
  _FakeStreamQueryStore_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_23 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExpression_24<D extends Object> extends _i1.SmartFake
    implements _i2.Expression<D> {
  _FakeExpression_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_25 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_26<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_27<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_28<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_29<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake
    implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_30<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_31<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_32<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_33<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_33(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_34 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFunctionsClient_35 extends _i1.SmartFake
    implements _i6.FunctionsClient {
  _FakeFunctionsClient_35(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStorageClient_36 extends _i1.SmartFake
    implements _i6.SupabaseStorageClient {
  _FakeSupabaseStorageClient_36(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeClient_37 extends _i1.SmartFake
    implements _i6.RealtimeClient {
  _FakeRealtimeClient_37(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestClient_38 extends _i1.SmartFake
    implements _i6.PostgrestClient {
  _FakePostgrestClient_38(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueClient_39 extends _i1.SmartFake implements _i6.GoTrueClient {
  _FakeGoTrueClient_39(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_40 extends _i1.SmartFake
    implements _i6.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_40(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQuerySchema_41 extends _i1.SmartFake
    implements _i6.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_41(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestFilterBuilder_42<T1> extends _i1.SmartFake
    implements _i6.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_42(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeChannel_43 extends _i1.SmartFake
    implements _i6.RealtimeChannel {
  _FakeRealtimeChannel_43(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStreamFilterBuilder_44 extends _i1.SmartFake
    implements _i6.SupabaseStreamFilterBuilder {
  _FakeSupabaseStreamFilterBuilder_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakePostgrestQueryBuilder_45<T> extends _i1.SmartFake
    implements _i6.PostgrestQueryBuilder<T> {
  _FakePostgrestQueryBuilder_45(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestBuilder_46<T, S, R> extends _i1.SmartFake
    implements _i6.PostgrestBuilder<T, S, R> {
  _FakePostgrestBuilder_46(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_47 extends _i1.SmartFake implements Uri {
  _FakeUri_47(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestTransformBuilder_48<T> extends _i1.SmartFake
    implements _i6.PostgrestTransformBuilder<T> {
  _FakePostgrestTransformBuilder_48(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponsePostgrestBuilder_49<T, S, R> extends _i1.SmartFake
    implements _i6.ResponsePostgrestBuilder<T, S, R> {
  _FakeResponsePostgrestBuilder_49(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueAdminApi_50 extends _i1.SmartFake
    implements _i6.GoTrueAdminApi {
  _FakeGoTrueAdminApi_50(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueMFAApi_51 extends _i1.SmartFake implements _i6.GoTrueMFAApi {
  _FakeGoTrueMFAApi_51(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResponse_52 extends _i1.SmartFake implements _i6.AuthResponse {
  _FakeAuthResponse_52(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOAuthResponse_53 extends _i1.SmartFake implements _i6.OAuthResponse {
  _FakeOAuthResponse_53(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthSessionUrlResponse_54 extends _i1.SmartFake
    implements _i6.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_54(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResendResponse_55 extends _i1.SmartFake
    implements _i6.ResendResponse {
  _FakeResendResponse_55(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserResponse_56 extends _i1.SmartFake implements _i6.UserResponse {
  _FakeUserResponse_56(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeObject_57 extends _i1.SmartFake implements Object {
  _FakeObject_57(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDecryptResult_58<T> extends _i1.SmartFake
    implements _i7.DecryptResult<T> {
  _FakeDecryptResult_58(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppDb_59 extends _i1.SmartFake implements _i3.AppDb {
  _FakeAppDb_59(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppDb].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDb extends _i1.Mock implements _i3.AppDb {
  @override
  int get schemaVersion =>
      (super.noSuchMethod(
            Invocation.getter(#schemaVersion),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  _i2.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_0(
              this,
              Invocation.getter(#migration),
            ),
            returnValueForMissingStub: _FakeMigrationStrategy_0(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i2.MigrationStrategy);

  @override
  _i3.$AppDbManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$AppDbManager_1(
              this,
              Invocation.getter(#managers),
            ),
            returnValueForMissingStub: _Fake$AppDbManager_1(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i3.$AppDbManager);

  @override
  _i3.$LocalNotesTable get localNotes =>
      (super.noSuchMethod(
            Invocation.getter(#localNotes),
            returnValue: _Fake$LocalNotesTable_2(
              this,
              Invocation.getter(#localNotes),
            ),
            returnValueForMissingStub: _Fake$LocalNotesTable_2(
              this,
              Invocation.getter(#localNotes),
            ),
          )
          as _i3.$LocalNotesTable);

  @override
  _i3.$PendingOpsTable get pendingOps =>
      (super.noSuchMethod(
            Invocation.getter(#pendingOps),
            returnValue: _Fake$PendingOpsTable_3(
              this,
              Invocation.getter(#pendingOps),
            ),
            returnValueForMissingStub: _Fake$PendingOpsTable_3(
              this,
              Invocation.getter(#pendingOps),
            ),
          )
          as _i3.$PendingOpsTable);

  @override
  _i3.$NoteTagsTable get noteTags =>
      (super.noSuchMethod(
            Invocation.getter(#noteTags),
            returnValue: _Fake$NoteTagsTable_4(
              this,
              Invocation.getter(#noteTags),
            ),
            returnValueForMissingStub: _Fake$NoteTagsTable_4(
              this,
              Invocation.getter(#noteTags),
            ),
          )
          as _i3.$NoteTagsTable);

  @override
  _i3.$NoteLinksTable get noteLinks =>
      (super.noSuchMethod(
            Invocation.getter(#noteLinks),
            returnValue: _Fake$NoteLinksTable_5(
              this,
              Invocation.getter(#noteLinks),
            ),
            returnValueForMissingStub: _Fake$NoteLinksTable_5(
              this,
              Invocation.getter(#noteLinks),
            ),
          )
          as _i3.$NoteLinksTable);

  @override
  _i3.$NoteRemindersTable get noteReminders =>
      (super.noSuchMethod(
            Invocation.getter(#noteReminders),
            returnValue: _Fake$NoteRemindersTable_6(
              this,
              Invocation.getter(#noteReminders),
            ),
            returnValueForMissingStub: _Fake$NoteRemindersTable_6(
              this,
              Invocation.getter(#noteReminders),
            ),
          )
          as _i3.$NoteRemindersTable);

  @override
  _i3.$NoteTasksTable get noteTasks =>
      (super.noSuchMethod(
            Invocation.getter(#noteTasks),
            returnValue: _Fake$NoteTasksTable_7(
              this,
              Invocation.getter(#noteTasks),
            ),
            returnValueForMissingStub: _Fake$NoteTasksTable_7(
              this,
              Invocation.getter(#noteTasks),
            ),
          )
          as _i3.$NoteTasksTable);

  @override
  _i3.$LocalFoldersTable get localFolders =>
      (super.noSuchMethod(
            Invocation.getter(#localFolders),
            returnValue: _Fake$LocalFoldersTable_8(
              this,
              Invocation.getter(#localFolders),
            ),
            returnValueForMissingStub: _Fake$LocalFoldersTable_8(
              this,
              Invocation.getter(#localFolders),
            ),
          )
          as _i3.$LocalFoldersTable);

  @override
  _i3.$NoteFoldersTable get noteFolders =>
      (super.noSuchMethod(
            Invocation.getter(#noteFolders),
            returnValue: _Fake$NoteFoldersTable_9(
              this,
              Invocation.getter(#noteFolders),
            ),
            returnValueForMissingStub: _Fake$NoteFoldersTable_9(
              this,
              Invocation.getter(#noteFolders),
            ),
          )
          as _i3.$NoteFoldersTable);

  @override
  _i3.$SavedSearchesTable get savedSearches =>
      (super.noSuchMethod(
            Invocation.getter(#savedSearches),
            returnValue: _Fake$SavedSearchesTable_10(
              this,
              Invocation.getter(#savedSearches),
            ),
            returnValueForMissingStub: _Fake$SavedSearchesTable_10(
              this,
              Invocation.getter(#savedSearches),
            ),
          )
          as _i3.$SavedSearchesTable);

  @override
  _i3.$LocalTemplatesTable get localTemplates =>
      (super.noSuchMethod(
            Invocation.getter(#localTemplates),
            returnValue: _Fake$LocalTemplatesTable_11(
              this,
              Invocation.getter(#localTemplates),
            ),
            returnValueForMissingStub: _Fake$LocalTemplatesTable_11(
              this,
              Invocation.getter(#localTemplates),
            ),
          )
          as _i3.$LocalTemplatesTable);

  @override
  _i3.$AttachmentsTable get attachments =>
      (super.noSuchMethod(
            Invocation.getter(#attachments),
            returnValue: _Fake$AttachmentsTable_12(
              this,
              Invocation.getter(#attachments),
            ),
            returnValueForMissingStub: _Fake$AttachmentsTable_12(
              this,
              Invocation.getter(#attachments),
            ),
          )
          as _i3.$AttachmentsTable);

  @override
  _i3.$InboxItemsTable get inboxItems =>
      (super.noSuchMethod(
            Invocation.getter(#inboxItems),
            returnValue: _Fake$InboxItemsTable_13(
              this,
              Invocation.getter(#inboxItems),
            ),
            returnValueForMissingStub: _Fake$InboxItemsTable_13(
              this,
              Invocation.getter(#inboxItems),
            ),
          )
          as _i3.$InboxItemsTable);

  @override
  _i3.$QuickCaptureQueueEntriesTable get quickCaptureQueueEntries =>
      (super.noSuchMethod(
            Invocation.getter(#quickCaptureQueueEntries),
            returnValue: _Fake$QuickCaptureQueueEntriesTable_14(
              this,
              Invocation.getter(#quickCaptureQueueEntries),
            ),
            returnValueForMissingStub: _Fake$QuickCaptureQueueEntriesTable_14(
              this,
              Invocation.getter(#quickCaptureQueueEntries),
            ),
          )
          as _i3.$QuickCaptureQueueEntriesTable);

  @override
  _i3.$QuickCaptureWidgetCacheEntriesTable get quickCaptureWidgetCacheEntries =>
      (super.noSuchMethod(
            Invocation.getter(#quickCaptureWidgetCacheEntries),
            returnValue: _Fake$QuickCaptureWidgetCacheEntriesTable_15(
              this,
              Invocation.getter(#quickCaptureWidgetCacheEntries),
            ),
            returnValueForMissingStub:
                _Fake$QuickCaptureWidgetCacheEntriesTable_15(
                  this,
                  Invocation.getter(#quickCaptureWidgetCacheEntries),
                ),
          )
          as _i3.$QuickCaptureWidgetCacheEntriesTable);

  @override
  _i2.Index get idxNoteFoldersNote =>
      (super.noSuchMethod(
            Invocation.getter(#idxNoteFoldersNote),
            returnValue: _FakeIndex_16(
              this,
              Invocation.getter(#idxNoteFoldersNote),
            ),
            returnValueForMissingStub: _FakeIndex_16(
              this,
              Invocation.getter(#idxNoteFoldersNote),
            ),
          )
          as _i2.Index);

  @override
  _i2.Index get idxNoteFoldersFolder =>
      (super.noSuchMethod(
            Invocation.getter(#idxNoteFoldersFolder),
            returnValue: _FakeIndex_16(
              this,
              Invocation.getter(#idxNoteFoldersFolder),
            ),
            returnValueForMissingStub: _FakeIndex_16(
              this,
              Invocation.getter(#idxNoteFoldersFolder),
            ),
          )
          as _i2.Index);

  @override
  _i2.Index get idxNoteFoldersFolderUpdated =>
      (super.noSuchMethod(
            Invocation.getter(#idxNoteFoldersFolderUpdated),
            returnValue: _FakeIndex_16(
              this,
              Invocation.getter(#idxNoteFoldersFolderUpdated),
            ),
            returnValueForMissingStub: _FakeIndex_16(
              this,
              Invocation.getter(#idxNoteFoldersFolderUpdated),
            ),
          )
          as _i2.Index);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
            returnValueForMissingStub: <_i2.TableInfo<_i2.Table, Object?>>[],
          )
          as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i2.DatabaseSchemaEntity>[],
            returnValueForMissingStub: <_i2.DatabaseSchemaEntity>[],
          )
          as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_17(
              this,
              Invocation.getter(#attachedDatabase),
            ),
            returnValueForMissingStub: _FakeGeneratedDatabase_17(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i2.GeneratedDatabase);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_18(
              this,
              Invocation.getter(#options),
            ),
            returnValueForMissingStub: _FakeDriftDatabaseOptions_18(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_19(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
            returnValueForMissingStub: _FakeStreamQueryUpdateRules_19(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i2.StreamQueryUpdateRules);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_20(
              this,
              Invocation.getter(#connection),
            ),
            returnValueForMissingStub: _FakeDatabaseConnection_20(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i8.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
            returnValueForMissingStub: _i8.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_21(
              this,
              Invocation.getter(#executor),
            ),
            returnValueForMissingStub: _FakeQueryExecutor_21(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i4.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_22(
              this,
              Invocation.getter(#streamQueries),
            ),
            returnValueForMissingStub: _FakeStreamQueryStore_22(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i4.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_23(
              this,
              Invocation.getter(#resolvedEngine),
            ),
            returnValueForMissingStub: _FakeDatabaseConnectionUser_23(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i2.Expression<bool> noteIsVisible(_i3.LocalNotes? t) =>
      (super.noSuchMethod(
            Invocation.method(#noteIsVisible, [t]),
            returnValue: _FakeExpression_24<bool>(
              this,
              Invocation.method(#noteIsVisible, [t]),
            ),
            returnValueForMissingStub: _FakeExpression_24<bool>(
              this,
              Invocation.method(#noteIsVisible, [t]),
            ),
          )
          as _i2.Expression<bool>);

  @override
  _i5.Future<List<_i3.LocalNote>> suggestNotesByTitlePrefix(
    String? query, {
    int? limit = 8,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #suggestNotesByTitlePrefix,
              [query],
              {#limit: limit},
            ),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> allNotes() =>
      (super.noSuchMethod(
            Invocation.method(#allNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesAfter({
    required DateTime? cursor,
    required int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#notesAfter, [], {
              #cursor: cursor,
              #limit: limit,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> pagedNotes({
    required int? limit,
    required int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pagedNotes, [], {
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> allNotesWithPinned() =>
      (super.noSuchMethod(
            Invocation.method(#allNotesWithPinned, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.LocalNote>> getPinnedNotes() =>
      (super.noSuchMethod(
            Invocation.method(#getPinnedNotes, []),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> toggleNotePin(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleNotePin, [noteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setNotePin(String? noteId, bool? isPinned) =>
      (super.noSuchMethod(
            Invocation.method(#setNotePin, [noteId, isPinned]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> migrateNoteId(String? fromNoteId, String? toNoteId) =>
      (super.noSuchMethod(
            Invocation.method(#migrateNoteId, [fromNoteId, toNoteId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> getNotesInFolderWithPinned(
    String? folderId, {
    int? limit,
    DateTime? cursor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getNotesInFolderWithPinned,
              [folderId],
              {#limit: limit, #cursor: cursor},
            ),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> upsertNote(_i3.LocalNote? n) =>
      (super.noSuchMethod(
            Invocation.method(#upsertNote, [n]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.LocalNote?> findNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#findNote, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Future<int> enqueue({
    required String? userId,
    required String? entityId,
    required String? kind,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#enqueue, [], {
              #userId: userId,
              #entityId: entityId,
              #kind: kind,
              #payload: payload,
            }),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.PendingOp>> getPendingOpsForUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getPendingOpsForUser, [userId]),
            returnValue: _i5.Future<List<_i3.PendingOp>>.value(
              <_i3.PendingOp>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.PendingOp>>.value(
              <_i3.PendingOp>[],
            ),
          )
          as _i5.Future<List<_i3.PendingOp>>);

  @override
  _i5.Future<void> deletePendingByIds({
    required String? userId,
    required Iterable<int>? ids,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deletePendingByIds, [], {
              #userId: userId,
              #ids: ids,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.PendingOp>> dequeueAll(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#dequeueAll, [userId]),
            returnValue: _i5.Future<List<_i3.PendingOp>>.value(
              <_i3.PendingOp>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.PendingOp>>.value(
              <_i3.PendingOp>[],
            ),
          )
          as _i5.Future<List<_i3.PendingOp>>);

  @override
  _i5.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Set<String>> getLocalActiveNoteIds() =>
      (super.noSuchMethod(
            Invocation.method(#getLocalActiveNoteIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<void> replaceTagsForNote(String? noteId, Set<String>? tags) =>
      (super.noSuchMethod(
            Invocation.method(#replaceTagsForNote, [noteId, tags]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> replaceLinksForNote(
    String? noteId,
    List<Map<String, String?>>? links,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#replaceLinksForNote, [noteId, links]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> distinctTags() =>
      (super.noSuchMethod(
            Invocation.method(#distinctTags, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i5.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i3.TagCount>> getTagsWithCounts() =>
      (super.noSuchMethod(
            Invocation.method(#getTagsWithCounts, []),
            returnValue: _i5.Future<List<_i3.TagCount>>.value(<_i3.TagCount>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.TagCount>>.value(
              <_i3.TagCount>[],
            ),
          )
          as _i5.Future<List<_i3.TagCount>>);

  @override
  _i5.Future<void> addTagToNote(String? noteId, String? rawTag) =>
      (super.noSuchMethod(
            Invocation.method(#addTagToNote, [noteId, rawTag]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeTagFromNote(String? noteId, String? rawTag) =>
      (super.noSuchMethod(
            Invocation.method(#removeTagFromNote, [noteId, rawTag]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<int> renameTagEverywhere(String? fromRaw, String? toRaw) =>
      (super.noSuchMethod(
            Invocation.method(#renameTagEverywhere, [fromRaw, toRaw]),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesByTags({
    required List<String>? anyTags,
    required _i3.SortSpec? sort,
    List<String>? noneTags = const [],
  }) =>
      (super.noSuchMethod(
            Invocation.method(#notesByTags, [], {
              #anyTags: anyTags,
              #sort: sort,
              #noneTags: noneTags,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<String>> searchTags(String? prefix) =>
      (super.noSuchMethod(
            Invocation.method(#searchTags, [prefix]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i5.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesWithTag(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#notesWithTag, [tag]),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> debugMetadata() =>
      (super.noSuchMethod(
            Invocation.method(#debugMetadata, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> notesForSavedSearch({
    required String? savedSearchKey,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#notesForSavedSearch, [], {
              #savedSearchKey: savedSearchKey,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.BacklinkPair>> backlinksWithSources(
    String? targetTitle,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#backlinksWithSources, [targetTitle]),
            returnValue: _i5.Future<List<_i3.BacklinkPair>>.value(
              <_i3.BacklinkPair>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.BacklinkPair>>.value(
              <_i3.BacklinkPair>[],
            ),
          )
          as _i5.Future<List<_i3.BacklinkPair>>);

  @override
  _i5.Future<List<_i3.LocalNote>> searchNotes(String? raw) =>
      (super.noSuchMethod(
            Invocation.method(#searchNotes, [raw]),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getRemindersForNote(
    String? noteId,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRemindersForNote, [noteId, userId]),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getActiveReminders(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getActiveReminders, [userId]),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<_i3.NoteReminder?> getReminderById(int? id, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getReminderById, [id, userId]),
            returnValue: _i5.Future<_i3.NoteReminder?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.NoteReminder?>.value(),
          )
          as _i5.Future<_i3.NoteReminder?>);

  @override
  _i5.Future<int> createReminder(_i3.NoteRemindersCompanion? reminder) =>
      (super.noSuchMethod(
            Invocation.method(#createReminder, [reminder]),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> updateReminder(
    int? id,
    String? userId,
    _i3.NoteRemindersCompanion? updates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateReminder, [id, userId, updates]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteReminderById(int? id, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteReminderById, [id, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteRemindersForNote(String? noteId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRemindersForNote, [noteId, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getTimeRemindersToTrigger({
    required DateTime? before,
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTimeRemindersToTrigger, [], {
              #before: before,
              #userId: userId,
            }),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getLocationReminders(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getLocationReminders, [userId]),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getRecurringReminders(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getRecurringReminders, [userId]),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getTasksForNote(
    String? noteId, {
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTasksForNote, [noteId], {#userId: userId}),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteTask>>.value(
              <_i3.NoteTask>[],
            ),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<_i3.NoteTask?> getTaskById(
    String? id, {
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTaskById, [id], {#userId: userId}),
            returnValue: _i5.Future<_i3.NoteTask?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.NoteTask?>.value(),
          )
          as _i5.Future<_i3.NoteTask?>);

  @override
  _i5.Future<_i3.NoteTask?> findTaskByContentHash({
    required String? noteId,
    required String? userId,
    required String? contentHash,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#findTaskByContentHash, [], {
              #noteId: noteId,
              #userId: userId,
              #contentHash: contentHash,
            }),
            returnValue: _i5.Future<_i3.NoteTask?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.NoteTask?>.value(),
          )
          as _i5.Future<_i3.NoteTask?>);

  @override
  _i5.Future<List<_i3.NoteTask>> getOpenTasks({
    required String? userId,
    DateTime? dueBefore,
    _i3.TaskPriority? priority,
    String? parentTaskId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOpenTasks, [], {
              #userId: userId,
              #dueBefore: dueBefore,
              #priority: priority,
              #parentTaskId: parentTaskId,
            }),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteTask>>.value(
              <_i3.NoteTask>[],
            ),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getTasksByDateRange({
    required String? userId,
    required DateTime? start,
    required DateTime? end,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTasksByDateRange, [], {
              #userId: userId,
              #start: start,
              #end: end,
            }),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteTask>>.value(
              <_i3.NoteTask>[],
            ),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getOverdueTasks(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getOverdueTasks, [userId]),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteTask>>.value(
              <_i3.NoteTask>[],
            ),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getAllTasks(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllTasks, [userId]),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteTask>>.value(
              <_i3.NoteTask>[],
            ),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteTask>> getCompletedTasks({
    required String? userId,
    DateTime? since,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCompletedTasks, [], {
              #userId: userId,
              #since: since,
              #limit: limit,
            }),
            returnValue: _i5.Future<List<_i3.NoteTask>>.value(<_i3.NoteTask>[]),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteTask>>.value(
              <_i3.NoteTask>[],
            ),
          )
          as _i5.Future<List<_i3.NoteTask>>);

  @override
  _i5.Future<void> createTask(_i3.NoteTasksCompanion? task) =>
      (super.noSuchMethod(
            Invocation.method(#createTask, [task]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateTask(
    String? id,
    String? userId,
    _i3.NoteTasksCompanion? updates,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTask, [id, userId, updates]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> completeTask(
    String? id,
    String? userId, {
    String? completedBy,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #completeTask,
              [id, userId],
              {#completedBy: completedBy},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> toggleTaskStatus(String? id, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleTaskStatus, [id, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTaskById(String? id, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTaskById, [id, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTasksForNote(String? noteId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTasksForNote, [noteId, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> syncTasksWithNoteContent(
    String? noteId,
    String? noteContent,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#syncTasksWithNoteContent, [noteId, noteContent]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i3.NoteTask>> watchOpenTasks(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#watchOpenTasks, [userId]),
            returnValue: _i5.Stream<List<_i3.NoteTask>>.empty(),
            returnValueForMissingStub: _i5.Stream<List<_i3.NoteTask>>.empty(),
          )
          as _i5.Stream<List<_i3.NoteTask>>);

  @override
  _i5.Stream<List<_i3.NoteTask>> watchTasksForNote(
    String? noteId,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchTasksForNote, [noteId, userId]),
            returnValue: _i5.Stream<List<_i3.NoteTask>>.empty(),
            returnValueForMissingStub: _i5.Stream<List<_i3.NoteTask>>.empty(),
          )
          as _i5.Stream<List<_i3.NoteTask>>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getSnoozedRemindersToReschedule({
    required DateTime? now,
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSnoozedRemindersToReschedule, [], {
              #now: now,
              #userId: userId,
            }),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<void> markReminderTriggered(
    int? id,
    String? userId, {
    DateTime? triggeredAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #markReminderTriggered,
              [id, userId],
              {#triggeredAt: triggeredAt},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> snoozeReminder(
    int? id,
    String? userId,
    DateTime? snoozeUntil,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#snoozeReminder, [id, userId, snoozeUntil]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clearSnooze(int? id, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#clearSnooze, [id, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deactivateReminder(int? id, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deactivateReminder, [id, userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteReminder>> getAllReminders(
    String? userId, {
    bool? activeOnly = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getAllReminders,
              [userId],
              {#activeOnly: activeOnly},
            ),
            returnValue: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteReminder>>.value(
              <_i3.NoteReminder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteReminder>>);

  @override
  _i5.Future<void> cleanupOrphanedReminders() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupOrphanedReminders, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, int>> getReminderStats(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getReminderStats, [userId]),
            returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
            returnValueForMissingStub: _i5.Future<Map<String, int>>.value(
              <String, int>{},
            ),
          )
          as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getRootFolders() =>
      (super.noSuchMethod(
            Invocation.method(#getRootFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getChildFolders(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getChildFolders, [parentId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<_i3.LocalFolder?> getFolderById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderById, [id]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<void> upsertFolder(_i3.LocalFolder? folder) =>
      (super.noSuchMethod(
            Invocation.method(#upsertFolder, [folder]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<int> getNotesCountInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNotesCountInFolder, [folderId]),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i3.LocalNote>> getNotesInFolder(
    String? folderId, {
    int? limit,
    DateTime? cursor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getNotesInFolder,
              [folderId],
              {#limit: limit, #cursor: cursor},
            ),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<Map<String, int>> getFolderNoteCounts() =>
      (super.noSuchMethod(
            Invocation.method(#getFolderNoteCounts, []),
            returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
            returnValueForMissingStub: _i5.Future<Map<String, int>>.value(
              <String, int>{},
            ),
          )
          as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<void> cleanupOrphanedRelationships() =>
      (super.noSuchMethod(
            Invocation.method(#cleanupOrphanedRelationships, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.LocalNote?> getNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNote, [id]),
            returnValue: _i5.Future<_i3.LocalNote?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalNote?>.value(),
          )
          as _i5.Future<_i3.LocalNote?>);

  @override
  _i5.Stream<_i3.LocalNote?> watchNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchNote, [id]),
            returnValue: _i5.Stream<_i3.LocalNote?>.empty(),
            returnValueForMissingStub: _i5.Stream<_i3.LocalNote?>.empty(),
          )
          as _i5.Stream<_i3.LocalNote?>);

  @override
  _i5.Future<void> updateNote(String? id, _i3.LocalNotesCompanion? updates) =>
      (super.noSuchMethod(
            Invocation.method(#updateNote, [id, updates]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocalNote>> getUnfiledNotes({
    int? limit,
    DateTime? cursor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUnfiledNotes, [], {
              #limit: limit,
              #cursor: cursor,
            }),
            returnValue: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalNote>>.value(
              <_i3.LocalNote>[],
            ),
          )
          as _i5.Future<List<_i3.LocalNote>>);

  @override
  _i5.Future<void> moveNoteToFolder(
    String? noteId,
    String? folderId, {
    String? expectedUserId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #moveNoteToFolder,
              [noteId, folderId],
              {#expectedUserId: expectedUserId},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getNoteIdsInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteIdsInFolder, [folderId]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i5.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.LocalFolder?> getNoteFolder(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteFolder, [noteId]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<String> generateFolderPath(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#generateFolderPath, [folderId]),
            returnValue: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#generateFolderPath, [folderId]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#generateFolderPath, [folderId]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i3.LocalFolder?> findFolder(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#findFolder, [id]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<List<_i3.LocalFolder>> allFolders() =>
      (super.noSuchMethod(
            Invocation.method(#allFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getActiveFolders() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveFolders, []),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<_i3.LocalFolder?> getFolderForNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderForNote, [noteId]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<void> removeNoteFromFolder(
    String? noteId, {
    String? expectedUserId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #removeNoteFromFolder,
              [noteId],
              {#expectedUserId: expectedUserId},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> upsertNoteFolder(_i3.NoteFolder? relationship) =>
      (super.noSuchMethod(
            Invocation.method(#upsertNoteFolder, [relationship]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.NoteFolder>> getAllNoteFolderRelationships() =>
      (super.noSuchMethod(
            Invocation.method(#getAllNoteFolderRelationships, []),
            returnValue: _i5.Future<List<_i3.NoteFolder>>.value(
              <_i3.NoteFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.NoteFolder>>.value(
              <_i3.NoteFolder>[],
            ),
          )
          as _i5.Future<List<_i3.NoteFolder>>);

  @override
  _i5.Future<Set<String>> getActiveNoteIds() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveNoteIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<Set<String>> getLocalActiveFolderIds() =>
      (super.noSuchMethod(
            Invocation.method(#getLocalActiveFolderIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getRecentlyUpdatedFolders({
    required DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentlyUpdatedFolders, [], {#since: since}),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getFoldersByParent(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getFoldersByParent, [parentId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<int> countNotesInFolder(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#countNotesInFolder, [folderId]),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> getFolderDepth(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderDepth, [folderId]),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<bool> hasChildFolders(String? folderId) =>
      (super.noSuchMethod(
            Invocation.method(#hasChildFolders, [folderId]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<List<_i3.LocalFolder>> getFolderSubtree(String? rootId) =>
      (super.noSuchMethod(
            Invocation.method(#getFolderSubtree, [rootId]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<List<_i3.LocalFolder>> searchFolders(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchFolders, [query]),
            returnValue: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.LocalFolder>>.value(
              <_i3.LocalFolder>[],
            ),
          )
          as _i5.Future<List<_i3.LocalFolder>>);

  @override
  _i5.Future<_i3.LocalFolder?> findFolderByName(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#findFolderByName, [name]),
            returnValue: _i5.Future<_i3.LocalFolder?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalFolder?>.value(),
          )
          as _i5.Future<_i3.LocalFolder?>);

  @override
  _i5.Future<void> upsertSavedSearch(_i3.SavedSearch? search) =>
      (super.noSuchMethod(
            Invocation.method(#upsertSavedSearch, [search]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearches, []),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getSavedSearchesByType(
    String? searchType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearchesByType, [searchType]),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Future<_i3.SavedSearch?> getSavedSearchById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedSearchById, [id]),
            returnValue: _i5.Future<_i3.SavedSearch?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.SavedSearch?>.value(),
          )
          as _i5.Future<_i3.SavedSearch?>);

  @override
  _i5.Future<void> deleteSavedSearch(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSavedSearch, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateSavedSearchUsage(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#updateSavedSearchUsage, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> toggleSavedSearchPin(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#toggleSavedSearchPin, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> reorderSavedSearches(List<String>? orderedIds) =>
      (super.noSuchMethod(
            Invocation.method(#reorderSavedSearches, [orderedIds]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<List<_i3.SavedSearch>> watchSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#watchSavedSearches, []),
            returnValue: _i5.Stream<List<_i3.SavedSearch>>.empty(),
            returnValueForMissingStub:
                _i5.Stream<List<_i3.SavedSearch>>.empty(),
          )
          as _i5.Stream<List<_i3.SavedSearch>>);

  @override
  _i5.Future<List<_i3.SavedSearch>> getPinnedSavedSearches() =>
      (super.noSuchMethod(
            Invocation.method(#getPinnedSavedSearches, []),
            returnValue: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.SavedSearch>>.value(
              <_i3.SavedSearch>[],
            ),
          )
          as _i5.Future<List<_i3.SavedSearch>>);

  @override
  _i5.Future<List<_i3.LocalTemplate>> getAllTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalTemplate>>.value(
              <_i3.LocalTemplate>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i3.LocalTemplate>>.value(
                  <_i3.LocalTemplate>[],
                ),
          )
          as _i5.Future<List<_i3.LocalTemplate>>);

  @override
  _i5.Future<List<_i3.LocalTemplate>> getSystemTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getSystemTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalTemplate>>.value(
              <_i3.LocalTemplate>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i3.LocalTemplate>>.value(
                  <_i3.LocalTemplate>[],
                ),
          )
          as _i5.Future<List<_i3.LocalTemplate>>);

  @override
  _i5.Future<List<_i3.LocalTemplate>> getUserTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getUserTemplates, []),
            returnValue: _i5.Future<List<_i3.LocalTemplate>>.value(
              <_i3.LocalTemplate>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i3.LocalTemplate>>.value(
                  <_i3.LocalTemplate>[],
                ),
          )
          as _i5.Future<List<_i3.LocalTemplate>>);

  @override
  _i5.Future<_i3.LocalTemplate?> getTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTemplate, [id]),
            returnValue: _i5.Future<_i3.LocalTemplate?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.LocalTemplate?>.value(),
          )
          as _i5.Future<_i3.LocalTemplate?>);

  @override
  _i5.Future<void> upsertTemplate(_i3.LocalTemplate? template) =>
      (super.noSuchMethod(
            Invocation.method(#upsertTemplate, [template]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> deleteTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTemplate, [id]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i2.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_25(
              this,
              Invocation.method(#createMigrator, []),
            ),
            returnValueForMissingStub: _FakeMigrator_25(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i2.Migrator);

  @override
  _i5.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<T> createStream<T extends Object>(
    _i4.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i5.Stream<T>.empty(),
            returnValueForMissingStub: _i5.Stream<T>.empty(),
          )
          as _i5.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i8.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
            returnValueForMissingStub: _i8.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i5.Stream<Set<_i2.TableUpdate>>.empty(),
            returnValueForMissingStub: _i5.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i5.Stream<Set<_i2.TableUpdate>>);

  @override
  _i5.Future<T> doWhenOpened<T>(
    _i5.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(this, Invocation.method(#doWhenOpened, [fn])),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i5.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_27<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
            returnValueForMissingStub: _FakeInsertStatement_27<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_28<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
            returnValueForMissingStub: _FakeUpdateStatement_28<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_29<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
            returnValueForMissingStub: _FakeSimpleSelectStatement_29<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_30<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
            returnValueForMissingStub: _FakeJoinedSelectStatement_30<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_31<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
            returnValueForMissingStub:
                _FakeBaseSelectStatement_31<_i2.TypedResult>(
                  this,
                  Invocation.method(#selectExpressions, [columns]),
                ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_32<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
            returnValueForMissingStub: _FakeDeleteStatement_32<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i5.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
            returnValueForMissingStub: _i5.Future<List<_i2.QueryRow>>.value(
              <_i2.QueryRow>[],
            ),
          )
          as _i5.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_33<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
            returnValueForMissingStub: _FakeSelectable_33<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_33<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
            returnValueForMissingStub: _FakeSelectable_33<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i5.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i5.Future<T>);

  @override
  _i5.Future<T> exclusively<T>(_i5.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i5.Future<T>);

  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<T> runWithInterceptor<T>(
    _i5.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_26<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i5.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_34(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
            returnValueForMissingStub: _FakeGenerationContext_34(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_34(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
            returnValueForMissingStub: _FakeGenerationContext_34(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
            returnValueForMissingStub: _i8.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i6.SupabaseClient {
  @override
  _i6.FunctionsClient get functions =>
      (super.noSuchMethod(
            Invocation.getter(#functions),
            returnValue: _FakeFunctionsClient_35(
              this,
              Invocation.getter(#functions),
            ),
            returnValueForMissingStub: _FakeFunctionsClient_35(
              this,
              Invocation.getter(#functions),
            ),
          )
          as _i6.FunctionsClient);

  @override
  _i6.SupabaseStorageClient get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeSupabaseStorageClient_36(
              this,
              Invocation.getter(#storage),
            ),
            returnValueForMissingStub: _FakeSupabaseStorageClient_36(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i6.SupabaseStorageClient);

  @override
  _i6.RealtimeClient get realtime =>
      (super.noSuchMethod(
            Invocation.getter(#realtime),
            returnValue: _FakeRealtimeClient_37(
              this,
              Invocation.getter(#realtime),
            ),
            returnValueForMissingStub: _FakeRealtimeClient_37(
              this,
              Invocation.getter(#realtime),
            ),
          )
          as _i6.RealtimeClient);

  @override
  _i6.PostgrestClient get rest =>
      (super.noSuchMethod(
            Invocation.getter(#rest),
            returnValue: _FakePostgrestClient_38(
              this,
              Invocation.getter(#rest),
            ),
            returnValueForMissingStub: _FakePostgrestClient_38(
              this,
              Invocation.getter(#rest),
            ),
          )
          as _i6.PostgrestClient);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
            returnValueForMissingStub: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i6.GoTrueClient get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeGoTrueClient_39(this, Invocation.getter(#auth)),
            returnValueForMissingStub: _FakeGoTrueClient_39(
              this,
              Invocation.getter(#auth),
            ),
          )
          as _i6.GoTrueClient);

  @override
  set functions(_i6.FunctionsClient? value) => super.noSuchMethod(
    Invocation.setter(#functions, value),
    returnValueForMissingStub: null,
  );

  @override
  set storage(_i6.SupabaseStorageClient? value) => super.noSuchMethod(
    Invocation.setter(#storage, value),
    returnValueForMissingStub: null,
  );

  @override
  set realtime(_i6.RealtimeClient? value) => super.noSuchMethod(
    Invocation.setter(#realtime, value),
    returnValueForMissingStub: null,
  );

  @override
  set rest(_i6.PostgrestClient? value) => super.noSuchMethod(
    Invocation.setter(#rest, value),
    returnValueForMissingStub: null,
  );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  _i6.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_40(
              this,
              Invocation.method(#from, [table]),
            ),
            returnValueForMissingStub: _FakeSupabaseQueryBuilder_40(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i6.SupabaseQueryBuilder);

  @override
  _i6.SupabaseQuerySchema schema(String? schema) =>
      (super.noSuchMethod(
            Invocation.method(#schema, [schema]),
            returnValue: _FakeSupabaseQuerySchema_41(
              this,
              Invocation.method(#schema, [schema]),
            ),
            returnValueForMissingStub: _FakeSupabaseQuerySchema_41(
              this,
              Invocation.method(#schema, [schema]),
            ),
          )
          as _i6.SupabaseQuerySchema);

  @override
  _i6.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            returnValue: _FakePostgrestFilterBuilder_42<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
          )
          as _i6.PostgrestFilterBuilder<T>);

  @override
  _i6.RealtimeChannel channel(
    String? name, {
    _i6.RealtimeChannelConfig? opts = const _i6.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#channel, [name], {#opts: opts}),
            returnValue: _FakeRealtimeChannel_43(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
            returnValueForMissingStub: _FakeRealtimeChannel_43(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
          )
          as _i6.RealtimeChannel);

  @override
  List<_i6.RealtimeChannel> getChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getChannels, []),
            returnValue: <_i6.RealtimeChannel>[],
            returnValueForMissingStub: <_i6.RealtimeChannel>[],
          )
          as List<_i6.RealtimeChannel>);

  @override
  _i5.Future<String> removeChannel(_i6.RealtimeChannel? channel) =>
      (super.noSuchMethod(
            Invocation.method(#removeChannel, [channel]),
            returnValue: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<String>> removeAllChannels() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllChannels, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i5.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [SupabaseQueryBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseQueryBuilder extends _i1.Mock
    implements _i6.SupabaseQueryBuilder {
  @override
  _i6.SupabaseStreamFilterBuilder stream({required List<String>? primaryKey}) =>
      (super.noSuchMethod(
            Invocation.method(#stream, [], {#primaryKey: primaryKey}),
            returnValue: _FakeSupabaseStreamFilterBuilder_44(
              this,
              Invocation.method(#stream, [], {#primaryKey: primaryKey}),
            ),
            returnValueForMissingStub: _FakeSupabaseStreamFilterBuilder_44(
              this,
              Invocation.method(#stream, [], {#primaryKey: primaryKey}),
            ),
          )
          as _i6.SupabaseStreamFilterBuilder);

  @override
  _i6.PostgrestFilterBuilder<List<Map<String, dynamic>>> select([
    String? columns = '*',
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#select, [columns]),
            returnValue:
                _FakePostgrestFilterBuilder_42<List<Map<String, dynamic>>>(
                  this,
                  Invocation.method(#select, [columns]),
                ),
            returnValueForMissingStub:
                _FakePostgrestFilterBuilder_42<List<Map<String, dynamic>>>(
                  this,
                  Invocation.method(#select, [columns]),
                ),
          )
          as _i6.PostgrestFilterBuilder<List<Map<String, dynamic>>>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> insert(
    Object? values, {
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #insert,
              [values],
              {#defaultToNull: defaultToNull},
            ),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #insert,
                [values],
                {#defaultToNull: defaultToNull},
              ),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #insert,
                [values],
                {#defaultToNull: defaultToNull},
              ),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> upsert(
    Object? values, {
    String? onConflict,
    bool? ignoreDuplicates = false,
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #upsert,
              [values],
              {
                #onConflict: onConflict,
                #ignoreDuplicates: ignoreDuplicates,
                #defaultToNull: defaultToNull,
              },
            ),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #upsert,
                [values],
                {
                  #onConflict: onConflict,
                  #ignoreDuplicates: ignoreDuplicates,
                  #defaultToNull: defaultToNull,
                },
              ),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #upsert,
                [values],
                {
                  #onConflict: onConflict,
                  #ignoreDuplicates: ignoreDuplicates,
                  #defaultToNull: defaultToNull,
                },
              ),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> update(Map<dynamic, dynamic>? values) =>
      (super.noSuchMethod(
            Invocation.method(#update, [values]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#update, [values]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#update, [values]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#delete, []),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#delete, []),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<int> count([
    _i6.CountOption? option = _i6.CountOption.exact,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#count, [option]),
            returnValue: _FakePostgrestFilterBuilder_42<int>(
              this,
              Invocation.method(#count, [option]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<int>(
              this,
              Invocation.method(#count, [option]),
            ),
          )
          as _i6.PostgrestFilterBuilder<int>);

  @override
  _i6.PostgrestQueryBuilder<dynamic> setHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setHeader, [key, value]),
            returnValue: _FakePostgrestQueryBuilder_45<dynamic>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
            returnValueForMissingStub: _FakePostgrestQueryBuilder_45<dynamic>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
          )
          as _i6.PostgrestQueryBuilder<dynamic>);

  @override
  _i6.PostgrestBuilder<U, U, dynamic> withConverter<U>(
    _i6.PostgrestConverter<U, dynamic>? converter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#withConverter, [converter]),
            returnValue: _FakePostgrestBuilder_46<U, U, dynamic>(
              this,
              Invocation.method(#withConverter, [converter]),
            ),
            returnValueForMissingStub: _FakePostgrestBuilder_46<U, U, dynamic>(
              this,
              Invocation.method(#withConverter, [converter]),
            ),
          )
          as _i6.PostgrestBuilder<U, U, dynamic>);

  @override
  Uri appendSearchParams(String? key, String? value, [Uri? url]) =>
      (super.noSuchMethod(
            Invocation.method(#appendSearchParams, [key, value, url]),
            returnValue: _FakeUri_47(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
            returnValueForMissingStub: _FakeUri_47(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
          )
          as Uri);

  @override
  Uri overrideSearchParams(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#overrideSearchParams, [key, value]),
            returnValue: _FakeUri_47(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
            returnValueForMissingStub: _FakeUri_47(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
          )
          as Uri);

  @override
  _i5.Stream<dynamic> asStream() =>
      (super.noSuchMethod(
            Invocation.method(#asStream, []),
            returnValue: _i5.Stream<dynamic>.empty(),
            returnValueForMissingStub: _i5.Stream<dynamic>.empty(),
          )
          as _i5.Stream<dynamic>);

  @override
  _i5.Future<dynamic> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#catchError, [onError], {#test: test}),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<U> then<U>(
    _i5.FutureOr<U> Function(dynamic)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#then, [onValue], {#onError: onError}),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i5.Future<U>.value(v),
                ) ??
                _FakeFuture_26<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i5.Future<U>.value(v),
                ) ??
                _FakeFuture_26<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
          )
          as _i5.Future<U>);

  @override
  _i5.Future<dynamic> timeout(
    Duration? timeLimit, {
    _i5.FutureOr<dynamic> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#timeout, [timeLimit], {#onTimeout: onTimeout}),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> whenComplete(_i5.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#whenComplete, [action]),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}

/// A class which mocks [PostgrestFilterBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestFilterBuilder extends _i1.Mock
    implements _i6.PostgrestFilterBuilder<dynamic> {
  @override
  _i6.PostgrestFilterBuilder<dynamic> copyWithUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#copyWithUrl, [url]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#copyWithUrl, [url]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#copyWithUrl, [url]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> not(
    String? column,
    String? operator,
    Object? value,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#not, [column, operator, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#not, [column, operator, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#not, [column, operator, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> or(
    String? filters, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #or,
              [filters],
              {#referencedTable: referencedTable},
            ),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #or,
                [filters],
                {#referencedTable: referencedTable},
              ),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #or,
                [filters],
                {#referencedTable: referencedTable},
              ),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> eq(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#eq, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#eq, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#eq, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> neq(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#neq, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#neq, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#neq, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> gt(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#gt, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#gt, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#gt, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> gte(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#gte, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#gte, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#gte, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> lt(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#lt, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#lt, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#lt, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> lte(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#lte, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#lte, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#lte, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> like(String? column, String? pattern) =>
      (super.noSuchMethod(
            Invocation.method(#like, [column, pattern]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#like, [column, pattern]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#like, [column, pattern]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> likeAllOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#likeAllOf, [column, patterns]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#likeAllOf, [column, patterns]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#likeAllOf, [column, patterns]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> likeAnyOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#likeAnyOf, [column, patterns]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#likeAnyOf, [column, patterns]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#likeAnyOf, [column, patterns]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> ilike(String? column, String? pattern) =>
      (super.noSuchMethod(
            Invocation.method(#ilike, [column, pattern]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#ilike, [column, pattern]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#ilike, [column, pattern]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> ilikeAllOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#ilikeAllOf, [column, patterns]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#ilikeAllOf, [column, patterns]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#ilikeAllOf, [column, patterns]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> ilikeAnyOf(
    String? column,
    List<String>? patterns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#ilikeAnyOf, [column, patterns]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#ilikeAnyOf, [column, patterns]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#ilikeAnyOf, [column, patterns]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> isFilter(String? column, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#isFilter, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#isFilter, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#isFilter, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> inFilter(
    String? column,
    List<dynamic>? values,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#inFilter, [column, values]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#inFilter, [column, values]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#inFilter, [column, values]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> contains(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#contains, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#contains, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#contains, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> containedBy(
    String? column,
    Object? value,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#containedBy, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#containedBy, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#containedBy, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> rangeLt(String? column, String? range) =>
      (super.noSuchMethod(
            Invocation.method(#rangeLt, [column, range]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeLt, [column, range]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeLt, [column, range]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> rangeGt(String? column, String? range) =>
      (super.noSuchMethod(
            Invocation.method(#rangeGt, [column, range]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeGt, [column, range]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeGt, [column, range]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> rangeGte(String? column, String? range) =>
      (super.noSuchMethod(
            Invocation.method(#rangeGte, [column, range]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeGte, [column, range]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeGte, [column, range]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> rangeLte(String? column, String? range) =>
      (super.noSuchMethod(
            Invocation.method(#rangeLte, [column, range]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeLte, [column, range]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeLte, [column, range]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> rangeAdjacent(
    String? column,
    String? range,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#rangeAdjacent, [column, range]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeAdjacent, [column, range]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#rangeAdjacent, [column, range]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> overlaps(String? column, Object? value) =>
      (super.noSuchMethod(
            Invocation.method(#overlaps, [column, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#overlaps, [column, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#overlaps, [column, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> textSearch(
    String? column,
    String? query, {
    String? config,
    _i6.TextSearchType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #textSearch,
              [column, query],
              {#config: config, #type: type},
            ),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #textSearch,
                [column, query],
                {#config: config, #type: type},
              ),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(
                #textSearch,
                [column, query],
                {#config: config, #type: type},
              ),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> filter(
    String? column,
    String? operator,
    Object? value,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#filter, [column, operator, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#filter, [column, operator, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#filter, [column, operator, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> match(Map<String, Object>? query) =>
      (super.noSuchMethod(
            Invocation.method(#match, [query]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#match, [query]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#match, [query]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestFilterBuilder<dynamic> setHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setHeader, [key, value]),
            returnValue: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_42<dynamic>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
          )
          as _i6.PostgrestFilterBuilder<dynamic>);

  @override
  _i6.PostgrestTransformBuilder<List<Map<String, dynamic>>> select([
    String? columns = '*',
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#select, [columns]),
            returnValue:
                _FakePostgrestTransformBuilder_48<List<Map<String, dynamic>>>(
                  this,
                  Invocation.method(#select, [columns]),
                ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<List<Map<String, dynamic>>>(
                  this,
                  Invocation.method(#select, [columns]),
                ),
          )
          as _i6.PostgrestTransformBuilder<List<Map<String, dynamic>>>);

  @override
  _i6.PostgrestTransformBuilder<dynamic> order(
    String? column, {
    bool? ascending = false,
    bool? nullsFirst = false,
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #order,
              [column],
              {
                #ascending: ascending,
                #nullsFirst: nullsFirst,
                #referencedTable: referencedTable,
              },
            ),
            returnValue: _FakePostgrestTransformBuilder_48<dynamic>(
              this,
              Invocation.method(
                #order,
                [column],
                {
                  #ascending: ascending,
                  #nullsFirst: nullsFirst,
                  #referencedTable: referencedTable,
                },
              ),
            ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<dynamic>(
                  this,
                  Invocation.method(
                    #order,
                    [column],
                    {
                      #ascending: ascending,
                      #nullsFirst: nullsFirst,
                      #referencedTable: referencedTable,
                    },
                  ),
                ),
          )
          as _i6.PostgrestTransformBuilder<dynamic>);

  @override
  _i6.PostgrestTransformBuilder<dynamic> limit(
    int? count, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #limit,
              [count],
              {#referencedTable: referencedTable},
            ),
            returnValue: _FakePostgrestTransformBuilder_48<dynamic>(
              this,
              Invocation.method(
                #limit,
                [count],
                {#referencedTable: referencedTable},
              ),
            ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<dynamic>(
                  this,
                  Invocation.method(
                    #limit,
                    [count],
                    {#referencedTable: referencedTable},
                  ),
                ),
          )
          as _i6.PostgrestTransformBuilder<dynamic>);

  @override
  _i6.PostgrestTransformBuilder<dynamic> range(
    int? from,
    int? to, {
    String? referencedTable,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #range,
              [from, to],
              {#referencedTable: referencedTable},
            ),
            returnValue: _FakePostgrestTransformBuilder_48<dynamic>(
              this,
              Invocation.method(
                #range,
                [from, to],
                {#referencedTable: referencedTable},
              ),
            ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<dynamic>(
                  this,
                  Invocation.method(
                    #range,
                    [from, to],
                    {#referencedTable: referencedTable},
                  ),
                ),
          )
          as _i6.PostgrestTransformBuilder<dynamic>);

  @override
  _i6.PostgrestTransformBuilder<Map<String, dynamic>> single() =>
      (super.noSuchMethod(
            Invocation.method(#single, []),
            returnValue:
                _FakePostgrestTransformBuilder_48<Map<String, dynamic>>(
                  this,
                  Invocation.method(#single, []),
                ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<Map<String, dynamic>>(
                  this,
                  Invocation.method(#single, []),
                ),
          )
          as _i6.PostgrestTransformBuilder<Map<String, dynamic>>);

  @override
  _i6.PostgrestTransformBuilder<Map<String, dynamic>?> maybeSingle() =>
      (super.noSuchMethod(
            Invocation.method(#maybeSingle, []),
            returnValue:
                _FakePostgrestTransformBuilder_48<Map<String, dynamic>?>(
                  this,
                  Invocation.method(#maybeSingle, []),
                ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<Map<String, dynamic>?>(
                  this,
                  Invocation.method(#maybeSingle, []),
                ),
          )
          as _i6.PostgrestTransformBuilder<Map<String, dynamic>?>);

  @override
  _i6.PostgrestTransformBuilder<String> csv() =>
      (super.noSuchMethod(
            Invocation.method(#csv, []),
            returnValue: _FakePostgrestTransformBuilder_48<String>(
              this,
              Invocation.method(#csv, []),
            ),
            returnValueForMissingStub:
                _FakePostgrestTransformBuilder_48<String>(
                  this,
                  Invocation.method(#csv, []),
                ),
          )
          as _i6.PostgrestTransformBuilder<String>);

  @override
  _i6.ResponsePostgrestBuilder<_i6.PostgrestResponse<dynamic>, dynamic, dynamic>
  count([_i6.CountOption? count = _i6.CountOption.exact]) =>
      (super.noSuchMethod(
            Invocation.method(#count, [count]),
            returnValue:
                _FakeResponsePostgrestBuilder_49<
                  _i6.PostgrestResponse<dynamic>,
                  dynamic,
                  dynamic
                >(this, Invocation.method(#count, [count])),
            returnValueForMissingStub:
                _FakeResponsePostgrestBuilder_49<
                  _i6.PostgrestResponse<dynamic>,
                  dynamic,
                  dynamic
                >(this, Invocation.method(#count, [count])),
          )
          as _i6.ResponsePostgrestBuilder<
            _i6.PostgrestResponse<dynamic>,
            dynamic,
            dynamic
          >);

  @override
  _i6.PostgrestBuilder<void, void, void> head() =>
      (super.noSuchMethod(
            Invocation.method(#head, []),
            returnValue: _FakePostgrestBuilder_46<void, void, void>(
              this,
              Invocation.method(#head, []),
            ),
            returnValueForMissingStub:
                _FakePostgrestBuilder_46<void, void, void>(
                  this,
                  Invocation.method(#head, []),
                ),
          )
          as _i6.PostgrestBuilder<void, void, void>);

  @override
  _i6.ResponsePostgrestBuilder<
    Map<String, dynamic>,
    Map<String, dynamic>,
    Map<String, dynamic>
  >
  geojson() =>
      (super.noSuchMethod(
            Invocation.method(#geojson, []),
            returnValue:
                _FakeResponsePostgrestBuilder_49<
                  Map<String, dynamic>,
                  Map<String, dynamic>,
                  Map<String, dynamic>
                >(this, Invocation.method(#geojson, [])),
            returnValueForMissingStub:
                _FakeResponsePostgrestBuilder_49<
                  Map<String, dynamic>,
                  Map<String, dynamic>,
                  Map<String, dynamic>
                >(this, Invocation.method(#geojson, [])),
          )
          as _i6.ResponsePostgrestBuilder<
            Map<String, dynamic>,
            Map<String, dynamic>,
            Map<String, dynamic>
          >);

  @override
  _i6.PostgrestBuilder<String, String, String> explain({
    bool? analyze = false,
    bool? verbose = false,
    bool? settings = false,
    bool? buffers = false,
    bool? wal = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#explain, [], {
              #analyze: analyze,
              #verbose: verbose,
              #settings: settings,
              #buffers: buffers,
              #wal: wal,
            }),
            returnValue: _FakePostgrestBuilder_46<String, String, String>(
              this,
              Invocation.method(#explain, [], {
                #analyze: analyze,
                #verbose: verbose,
                #settings: settings,
                #buffers: buffers,
                #wal: wal,
              }),
            ),
            returnValueForMissingStub:
                _FakePostgrestBuilder_46<String, String, String>(
                  this,
                  Invocation.method(#explain, [], {
                    #analyze: analyze,
                    #verbose: verbose,
                    #settings: settings,
                    #buffers: buffers,
                    #wal: wal,
                  }),
                ),
          )
          as _i6.PostgrestBuilder<String, String, String>);

  @override
  _i6.PostgrestBuilder<U, U, dynamic> withConverter<U>(
    _i6.PostgrestConverter<U, dynamic>? converter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#withConverter, [converter]),
            returnValue: _FakePostgrestBuilder_46<U, U, dynamic>(
              this,
              Invocation.method(#withConverter, [converter]),
            ),
            returnValueForMissingStub: _FakePostgrestBuilder_46<U, U, dynamic>(
              this,
              Invocation.method(#withConverter, [converter]),
            ),
          )
          as _i6.PostgrestBuilder<U, U, dynamic>);

  @override
  Uri appendSearchParams(String? key, String? value, [Uri? url]) =>
      (super.noSuchMethod(
            Invocation.method(#appendSearchParams, [key, value, url]),
            returnValue: _FakeUri_47(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
            returnValueForMissingStub: _FakeUri_47(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
          )
          as Uri);

  @override
  Uri overrideSearchParams(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#overrideSearchParams, [key, value]),
            returnValue: _FakeUri_47(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
            returnValueForMissingStub: _FakeUri_47(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
          )
          as Uri);

  @override
  _i5.Stream<dynamic> asStream() =>
      (super.noSuchMethod(
            Invocation.method(#asStream, []),
            returnValue: _i5.Stream<dynamic>.empty(),
            returnValueForMissingStub: _i5.Stream<dynamic>.empty(),
          )
          as _i5.Stream<dynamic>);

  @override
  _i5.Future<dynamic> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#catchError, [onError], {#test: test}),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<U> then<U>(
    _i5.FutureOr<U> Function(dynamic)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#then, [onValue], {#onError: onError}),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i5.Future<U>.value(v),
                ) ??
                _FakeFuture_26<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i5.Future<U>.value(v),
                ) ??
                _FakeFuture_26<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
          )
          as _i5.Future<U>);

  @override
  _i5.Future<dynamic> timeout(
    Duration? timeLimit, {
    _i5.FutureOr<dynamic> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#timeout, [timeLimit], {#onTimeout: onTimeout}),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> whenComplete(_i5.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#whenComplete, [action]),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}

/// A class which mocks [PostgrestBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestBuilder extends _i1.Mock
    implements _i6.PostgrestBuilder<dynamic, dynamic, dynamic> {
  @override
  _i6.PostgrestBuilder<dynamic, dynamic, dynamic> setHeader(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setHeader, [key, value]),
            returnValue: _FakePostgrestBuilder_46<dynamic, dynamic, dynamic>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
            returnValueForMissingStub:
                _FakePostgrestBuilder_46<dynamic, dynamic, dynamic>(
                  this,
                  Invocation.method(#setHeader, [key, value]),
                ),
          )
          as _i6.PostgrestBuilder<dynamic, dynamic, dynamic>);

  @override
  Uri appendSearchParams(String? key, String? value, [Uri? url]) =>
      (super.noSuchMethod(
            Invocation.method(#appendSearchParams, [key, value, url]),
            returnValue: _FakeUri_47(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
            returnValueForMissingStub: _FakeUri_47(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
          )
          as Uri);

  @override
  Uri overrideSearchParams(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#overrideSearchParams, [key, value]),
            returnValue: _FakeUri_47(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
            returnValueForMissingStub: _FakeUri_47(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
          )
          as Uri);

  @override
  _i5.Stream<dynamic> asStream() =>
      (super.noSuchMethod(
            Invocation.method(#asStream, []),
            returnValue: _i5.Stream<dynamic>.empty(),
            returnValueForMissingStub: _i5.Stream<dynamic>.empty(),
          )
          as _i5.Stream<dynamic>);

  @override
  _i5.Future<dynamic> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#catchError, [onError], {#test: test}),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<U> then<U>(
    _i5.FutureOr<U> Function(dynamic)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#then, [onValue], {#onError: onError}),
            returnValue:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i5.Future<U>.value(v),
                ) ??
                _FakeFuture_26<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
            returnValueForMissingStub:
                _i8.ifNotNull(
                  _i8.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i5.Future<U>.value(v),
                ) ??
                _FakeFuture_26<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
          )
          as _i5.Future<U>);

  @override
  _i5.Future<dynamic> timeout(
    Duration? timeLimit, {
    _i5.FutureOr<dynamic> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#timeout, [timeLimit], {#onTimeout: onTimeout}),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> whenComplete(_i5.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#whenComplete, [action]),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i6.GoTrueClient {
  @override
  _i6.GoTrueAdminApi get admin =>
      (super.noSuchMethod(
            Invocation.getter(#admin),
            returnValue: _FakeGoTrueAdminApi_50(
              this,
              Invocation.getter(#admin),
            ),
            returnValueForMissingStub: _FakeGoTrueAdminApi_50(
              this,
              Invocation.getter(#admin),
            ),
          )
          as _i6.GoTrueAdminApi);

  @override
  _i6.GoTrueMFAApi get mfa =>
      (super.noSuchMethod(
            Invocation.getter(#mfa),
            returnValue: _FakeGoTrueMFAApi_51(this, Invocation.getter(#mfa)),
            returnValueForMissingStub: _FakeGoTrueMFAApi_51(
              this,
              Invocation.getter(#mfa),
            ),
          )
          as _i6.GoTrueMFAApi);

  @override
  _i5.Stream<_i6.AuthState> get onAuthStateChange =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChange),
            returnValue: _i5.Stream<_i6.AuthState>.empty(),
            returnValueForMissingStub: _i5.Stream<_i6.AuthState>.empty(),
          )
          as _i5.Stream<_i6.AuthState>);

  @override
  _i5.Stream<_i6.AuthState> get onAuthStateChangeSync =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChangeSync),
            returnValue: _i5.Stream<_i6.AuthState>.empty(),
            returnValueForMissingStub: _i5.Stream<_i6.AuthState>.empty(),
          )
          as _i5.Stream<_i6.AuthState>);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
            returnValueForMissingStub: <String, String>{},
          )
          as Map<String, String>);

  @override
  set admin(_i6.GoTrueAdminApi? value) => super.noSuchMethod(
    Invocation.setter(#admin, value),
    returnValueForMissingStub: null,
  );

  @override
  set mfa(_i6.GoTrueMFAApi? value) => super.noSuchMethod(
    Invocation.setter(#mfa, value),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i6.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, [], {
              #data: data,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signInAnonymously, [], {
                  #data: data,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signInAnonymously, [], {
                  #data: data,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<_i6.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i6.OtpChannel? channel = _i6.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #emailRedirectTo: emailRedirectTo,
                  #data: data,
                  #captchaToken: captchaToken,
                  #channel: channel,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #emailRedirectTo: emailRedirectTo,
                  #data: data,
                  #captchaToken: captchaToken,
                  #channel: channel,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<_i6.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPassword, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signInWithPassword, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signInWithPassword, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<_i6.OAuthResponse> getOAuthSignInUrl({
    required _i6.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOAuthSignInUrl, [], {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            }),
            returnValue: _i5.Future<_i6.OAuthResponse>.value(
              _FakeOAuthResponse_53(
                this,
                Invocation.method(#getOAuthSignInUrl, [], {
                  #provider: provider,
                  #redirectTo: redirectTo,
                  #scopes: scopes,
                  #queryParams: queryParams,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.OAuthResponse>.value(
              _FakeOAuthResponse_53(
                this,
                Invocation.method(#getOAuthSignInUrl, [], {
                  #provider: provider,
                  #redirectTo: redirectTo,
                  #scopes: scopes,
                  #queryParams: queryParams,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.OAuthResponse>);

  @override
  _i5.Future<_i6.AuthSessionUrlResponse> exchangeCodeForSession(
    String? authCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exchangeCodeForSession, [authCode]),
            returnValue: _i5.Future<_i6.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_54(
                this,
                Invocation.method(#exchangeCodeForSession, [authCode]),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i6.AuthSessionUrlResponse>.value(
                  _FakeAuthSessionUrlResponse_54(
                    this,
                    Invocation.method(#exchangeCodeForSession, [authCode]),
                  ),
                ),
          )
          as _i5.Future<_i6.AuthSessionUrlResponse>);

  @override
  _i5.Future<_i6.AuthResponse> signInWithIdToken({
    required _i6.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithIdToken, [], {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signInWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#signInWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i6.OtpChannel? channel = _i6.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithOtp, [], {
              #email: email,
              #phone: phone,
              #emailRedirectTo: emailRedirectTo,
              #shouldCreateUser: shouldCreateUser,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i6.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i6.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOTP, [], {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            }),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#verifyOTP, [], {
                  #email: email,
                  #phone: phone,
                  #token: token,
                  #type: type,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                  #tokenHash: tokenHash,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#verifyOTP, [], {
                  #email: email,
                  #phone: phone,
                  #token: token,
                  #type: type,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                  #tokenHash: tokenHash,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSSOSignInUrl, [], {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#getSSOSignInUrl, [], {
                  #providerId: providerId,
                  #domain: domain,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#getSSOSignInUrl, [], {
                  #providerId: providerId,
                  #domain: domain,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i6.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSession, [refreshToken]),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#refreshSession, [refreshToken]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#refreshSession, [refreshToken]),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<void> reauthenticate() =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticate, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i6.ResendResponse> resend({
    String? email,
    String? phone,
    required _i6.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resend, [], {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i6.ResendResponse>.value(
              _FakeResendResponse_55(
                this,
                Invocation.method(#resend, [], {
                  #email: email,
                  #phone: phone,
                  #type: type,
                  #emailRedirectTo: emailRedirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.ResendResponse>.value(
              _FakeResendResponse_55(
                this,
                Invocation.method(#resend, [], {
                  #email: email,
                  #phone: phone,
                  #type: type,
                  #emailRedirectTo: emailRedirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.ResendResponse>);

  @override
  _i5.Future<_i6.UserResponse> getUser([String? jwt]) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [jwt]),
            returnValue: _i5.Future<_i6.UserResponse>.value(
              _FakeUserResponse_56(this, Invocation.method(#getUser, [jwt])),
            ),
            returnValueForMissingStub: _i5.Future<_i6.UserResponse>.value(
              _FakeUserResponse_56(this, Invocation.method(#getUser, [jwt])),
            ),
          )
          as _i5.Future<_i6.UserResponse>);

  @override
  _i5.Future<_i6.UserResponse> updateUser(
    _i6.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateUser,
              [attributes],
              {#emailRedirectTo: emailRedirectTo},
            ),
            returnValue: _i5.Future<_i6.UserResponse>.value(
              _FakeUserResponse_56(
                this,
                Invocation.method(
                  #updateUser,
                  [attributes],
                  {#emailRedirectTo: emailRedirectTo},
                ),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.UserResponse>.value(
              _FakeUserResponse_56(
                this,
                Invocation.method(
                  #updateUser,
                  [attributes],
                  {#emailRedirectTo: emailRedirectTo},
                ),
              ),
            ),
          )
          as _i5.Future<_i6.UserResponse>);

  @override
  _i5.Future<_i6.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [refreshToken]),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#setSession, [refreshToken]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#setSession, [refreshToken]),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<_i6.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSessionFromUrl,
              [originUrl],
              {#storeSession: storeSession},
            ),
            returnValue: _i5.Future<_i6.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_54(
                this,
                Invocation.method(
                  #getSessionFromUrl,
                  [originUrl],
                  {#storeSession: storeSession},
                ),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i6.AuthSessionUrlResponse>.value(
                  _FakeAuthSessionUrlResponse_54(
                    this,
                    Invocation.method(
                      #getSessionFromUrl,
                      [originUrl],
                      {#storeSession: storeSession},
                    ),
                  ),
                ),
          )
          as _i5.Future<_i6.AuthSessionUrlResponse>);

  @override
  _i5.Future<void> signOut({
    _i6.SignOutScope? scope = _i6.SignOutScope.local,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signOut, [], {#scope: scope}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #resetPasswordForEmail,
              [email],
              {#redirectTo: redirectTo, #captchaToken: captchaToken},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.UserIdentity>> getUserIdentities() =>
      (super.noSuchMethod(
            Invocation.method(#getUserIdentities, []),
            returnValue: _i5.Future<List<_i6.UserIdentity>>.value(
              <_i6.UserIdentity>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i6.UserIdentity>>.value(
              <_i6.UserIdentity>[],
            ),
          )
          as _i5.Future<List<_i6.UserIdentity>>);

  @override
  _i5.Future<_i6.AuthResponse> linkIdentityWithIdToken({
    required _i6.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#linkIdentityWithIdToken, [], {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#linkIdentityWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#linkIdentityWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  _i5.Future<_i6.OAuthResponse> getLinkIdentityUrl(
    _i6.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getLinkIdentityUrl,
              [provider],
              {
                #redirectTo: redirectTo,
                #scopes: scopes,
                #queryParams: queryParams,
              },
            ),
            returnValue: _i5.Future<_i6.OAuthResponse>.value(
              _FakeOAuthResponse_53(
                this,
                Invocation.method(
                  #getLinkIdentityUrl,
                  [provider],
                  {
                    #redirectTo: redirectTo,
                    #scopes: scopes,
                    #queryParams: queryParams,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.OAuthResponse>.value(
              _FakeOAuthResponse_53(
                this,
                Invocation.method(
                  #getLinkIdentityUrl,
                  [provider],
                  {
                    #redirectTo: redirectTo,
                    #scopes: scopes,
                    #queryParams: queryParams,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i6.OAuthResponse>);

  @override
  _i5.Future<void> unlinkIdentity(_i6.UserIdentity? identity) =>
      (super.noSuchMethod(
            Invocation.method(#unlinkIdentity, [identity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setInitialSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#setInitialSession, [jsonStr]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i6.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#recoverSession, [jsonStr]),
            returnValue: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#recoverSession, [jsonStr]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i6.AuthResponse>.value(
              _FakeAuthResponse_52(
                this,
                Invocation.method(#recoverSession, [jsonStr]),
              ),
            ),
          )
          as _i5.Future<_i6.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
    Invocation.method(#startAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
    Invocation.method(#stopAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyAllSubscribers(
    _i6.AuthChangeEvent? event, {
    _i6.Session? session,
    bool? broadcast = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #notifyAllSubscribers,
      [event],
      {#session: session, #broadcast: broadcast},
    ),
    returnValueForMissingStub: null,
  );

  @override
  Object notifyException(Object? exception, [StackTrace? stackTrace]) =>
      (super.noSuchMethod(
            Invocation.method(#notifyException, [exception, stackTrace]),
            returnValue: _FakeObject_57(
              this,
              Invocation.method(#notifyException, [exception, stackTrace]),
            ),
            returnValueForMissingStub: _FakeObject_57(
              this,
              Invocation.method(#notifyException, [exception, stackTrace]),
            ),
          )
          as Object);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i6.User {
  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#id)),
            returnValueForMissingStub: _i8.dummyValue<String>(
              this,
              Invocation.getter(#id),
            ),
          )
          as String);

  @override
  Map<String, dynamic> get appMetadata =>
      (super.noSuchMethod(
            Invocation.getter(#appMetadata),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String get aud =>
      (super.noSuchMethod(
            Invocation.getter(#aud),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#aud)),
            returnValueForMissingStub: _i8.dummyValue<String>(
              this,
              Invocation.getter(#aud),
            ),
          )
          as String);

  @override
  String get createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#createdAt),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#createdAt),
            ),
            returnValueForMissingStub: _i8.dummyValue<String>(
              this,
              Invocation.getter(#createdAt),
            ),
          )
          as String);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(
            Invocation.getter(#isAnonymous),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [CryptoBox].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptoBox extends _i1.Mock implements _i7.CryptoBox {
  @override
  _i5.Future<_i9.Uint8List> encryptJsonForNote({
    required String? userId,
    required String? noteId,
    required Map<String, dynamic>? json,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#encryptJsonForNote, [], {
              #userId: userId,
              #noteId: noteId,
              #json: json,
            }),
            returnValue: _i5.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
            returnValueForMissingStub: _i5.Future<_i9.Uint8List>.value(
              _i9.Uint8List(0),
            ),
          )
          as _i5.Future<_i9.Uint8List>);

  @override
  _i5.Future<Map<String, dynamic>> decryptJsonForNote({
    required String? userId,
    required String? noteId,
    required _i9.Uint8List? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#decryptJsonForNote, [], {
              #userId: userId,
              #noteId: noteId,
              #data: data,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<_i9.Uint8List> encryptStringForNote({
    required String? userId,
    required String? noteId,
    required String? text,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#encryptStringForNote, [], {
              #userId: userId,
              #noteId: noteId,
              #text: text,
            }),
            returnValue: _i5.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
            returnValueForMissingStub: _i5.Future<_i9.Uint8List>.value(
              _i9.Uint8List(0),
            ),
          )
          as _i5.Future<_i9.Uint8List>);

  @override
  _i5.Future<String> decryptStringForNote({
    required String? userId,
    required String? noteId,
    required _i9.Uint8List? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#decryptStringForNote, [], {
              #userId: userId,
              #noteId: noteId,
              #data: data,
            }),
            returnValue: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#decryptStringForNote, [], {
                  #userId: userId,
                  #noteId: noteId,
                  #data: data,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#decryptStringForNote, [], {
                  #userId: userId,
                  #noteId: noteId,
                  #data: data,
                }),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i7.DecryptResult<Map<String, dynamic>>>
  decryptJsonForNoteWithFallback({
    required String? userId,
    required String? noteId,
    required _i9.Uint8List? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#decryptJsonForNoteWithFallback, [], {
              #userId: userId,
              #noteId: noteId,
              #data: data,
            }),
            returnValue:
                _i5.Future<_i7.DecryptResult<Map<String, dynamic>>>.value(
                  _FakeDecryptResult_58<Map<String, dynamic>>(
                    this,
                    Invocation.method(#decryptJsonForNoteWithFallback, [], {
                      #userId: userId,
                      #noteId: noteId,
                      #data: data,
                    }),
                  ),
                ),
            returnValueForMissingStub:
                _i5.Future<_i7.DecryptResult<Map<String, dynamic>>>.value(
                  _FakeDecryptResult_58<Map<String, dynamic>>(
                    this,
                    Invocation.method(#decryptJsonForNoteWithFallback, [], {
                      #userId: userId,
                      #noteId: noteId,
                      #data: data,
                    }),
                  ),
                ),
          )
          as _i5.Future<_i7.DecryptResult<Map<String, dynamic>>>);

  @override
  _i5.Future<_i7.DecryptResult<String>> decryptStringForNoteWithFallback({
    required String? userId,
    required String? noteId,
    required _i9.Uint8List? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#decryptStringForNoteWithFallback, [], {
              #userId: userId,
              #noteId: noteId,
              #data: data,
            }),
            returnValue: _i5.Future<_i7.DecryptResult<String>>.value(
              _FakeDecryptResult_58<String>(
                this,
                Invocation.method(#decryptStringForNoteWithFallback, [], {
                  #userId: userId,
                  #noteId: noteId,
                  #data: data,
                }),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i7.DecryptResult<String>>.value(
                  _FakeDecryptResult_58<String>(
                    this,
                    Invocation.method(#decryptStringForNoteWithFallback, [], {
                      #userId: userId,
                      #noteId: noteId,
                      #data: data,
                    }),
                  ),
                ),
          )
          as _i5.Future<_i7.DecryptResult<String>>);
}

/// A class which mocks [SupabaseNoteApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseNoteApi extends _i1.Mock implements _i10.SupabaseNoteApi {
  @override
  _i5.Future<void> upsertEncryptedNote({
    DateTime? createdAt,
    required String? id,
    required _i9.Uint8List? titleEnc,
    required _i9.Uint8List? propsEnc,
    required bool? deleted,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertEncryptedNote, [], {
              #createdAt: createdAt,
              #id: id,
              #titleEnc: titleEnc,
              #propsEnc: propsEnc,
              #deleted: deleted,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchEncryptedNotes({
    DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchEncryptedNotes, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Set<String>> fetchAllActiveIds() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllActiveIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<void> upsertEncryptedFolder({
    required String? id,
    required _i9.Uint8List? nameEnc,
    required _i9.Uint8List? propsEnc,
    required bool? deleted,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertEncryptedFolder, [], {
              #id: id,
              #nameEnc: nameEnc,
              #propsEnc: propsEnc,
              #deleted: deleted,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchEncryptedFolders({
    DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchEncryptedFolders, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Set<String>> fetchAllActiveFolderIds() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllActiveFolderIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<void> upsertNoteFolderRelation({
    required String? noteId,
    required String? folderId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertNoteFolderRelation, [], {
              #noteId: noteId,
              #folderId: folderId,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeNoteFolderRelation({required String? noteId}) =>
      (super.noSuchMethod(
            Invocation.method(#removeNoteFolderRelation, [], {#noteId: noteId}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchNoteFolderRelations({
    DateTime? since,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchNoteFolderRelations, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchNoteFolderRelationsForNotes(
    List<String>? noteIds,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchNoteFolderRelationsForNotes, [noteIds]),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchNoteFolderRelationsForFolder(
    String? folderId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchNoteFolderRelationsForFolder, [folderId]),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchNoteTags({DateTime? since}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchNoteTags, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchNoteTasks({DateTime? since}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchNoteTasks, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Set<String>> fetchAllActiveTaskIds() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllActiveTaskIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchAttachments({DateTime? since}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAttachments, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Set<String>> fetchAllActiveAttachmentIds() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllActiveAttachmentIds, []),
            returnValue: _i5.Future<Set<String>>.value(<String>{}),
            returnValueForMissingStub: _i5.Future<Set<String>>.value(
              <String>{},
            ),
          )
          as _i5.Future<Set<String>>);

  @override
  _i5.Future<void> upsertNoteTask({
    required String? id,
    required String? noteId,
    required String? content,
    required String? status,
    int? priority = 0,
    int? position = 0,
    DateTime? dueDate,
    DateTime? completedAt,
    String? parentId,
    Map<String, dynamic>? labels,
    Map<String, dynamic>? metadata,
    required bool? deleted,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertNoteTask, [], {
              #id: id,
              #noteId: noteId,
              #content: content,
              #status: status,
              #priority: priority,
              #position: position,
              #dueDate: dueDate,
              #completedAt: completedAt,
              #parentId: parentId,
              #labels: labels,
              #metadata: metadata,
              #deleted: deleted,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteNoteTask({required String? id}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNoteTask, [], {#id: id}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchTemplates({DateTime? since}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchTemplates, [], {#since: since}),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> upsertTemplate({
    required String? id,
    required String? userId,
    required String? titleEnc,
    required String? bodyEnc,
    String? tagsEnc,
    required bool? isSystem,
    required String? category,
    String? descriptionEnc,
    String? icon,
    int? sortOrder = 0,
    String? propsEnc,
    required bool? deleted,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertTemplate, [], {
              #id: id,
              #userId: userId,
              #titleEnc: titleEnc,
              #bodyEnc: bodyEnc,
              #tagsEnc: tagsEnc,
              #isSystem: isSystem,
              #category: category,
              #descriptionEnc: descriptionEnc,
              #icon: icon,
              #sortOrder: sortOrder,
              #propsEnc: propsEnc,
              #deleted: deleted,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTemplate({required String? id}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTemplate, [], {#id: id}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getReminders() =>
      (super.noSuchMethod(
            Invocation.method(#getReminders, []),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> upsertReminder(Map<String, dynamic>? reminderData) =>
      (super.noSuchMethod(
            Invocation.method(#upsertReminder, [reminderData]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteReminder(String? reminderId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteReminder, [reminderId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [FtsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFtsService extends _i1.Mock implements _i11.FtsService {
  @override
  _i3.AppDb get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDb_59(this, Invocation.getter(#db)),
            returnValueForMissingStub: _FakeAppDb_59(
              this,
              Invocation.getter(#db),
            ),
          )
          as _i3.AppDb);

  @override
  _i5.Future<bool> indexNote({
    required String? noteId,
    required String? title,
    required String? body,
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#indexNote, [], {
              #noteId: noteId,
              #title: title,
              #body: body,
              #folderPath: folderPath,
            }),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> removeNote(String? noteId) =>
      (super.noSuchMethod(
            Invocation.method(#removeNote, [noteId]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<int> indexNotesBatch(
    List<({String body, String? folderPath, String id, String title})>? notes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#indexNotesBatch, [notes]),
            returnValue: _i5.Future<int>.value(0),
            returnValueForMissingStub: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<({int failed, int successful, int total})> reindexAllNotes({
    required _i5.Future<
      List<({String body, String? folderPath, String id, String title})>
    >
    Function()?
    notesFetcher,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#reindexAllNotes, [], {
              #notesFetcher: notesFetcher,
            }),
            returnValue:
                _i5.Future<({int failed, int successful, int total})>.value((
                  failed: 0,
                  successful: 0,
                  total: 0,
                )),
            returnValueForMissingStub:
                _i5.Future<({int failed, int successful, int total})>.value((
                  failed: 0,
                  successful: 0,
                  total: 0,
                )),
          )
          as _i5.Future<({int failed, int successful, int total})>);

  @override
  _i5.Future<({bool healthy, int missing, int stale})> verifyIntegrity() =>
      (super.noSuchMethod(
            Invocation.method(#verifyIntegrity, []),
            returnValue:
                _i5.Future<({bool healthy, int missing, int stale})>.value((
                  healthy: false,
                  missing: 0,
                  stale: 0,
                )),
            returnValueForMissingStub:
                _i5.Future<({bool healthy, int missing, int stale})>.value((
                  healthy: false,
                  missing: 0,
                  stale: 0,
                )),
          )
          as _i5.Future<({bool healthy, int missing, int stale})>);

  @override
  _i5.Future<bool> repairFts({
    required _i5.Future<
      List<({String body, String? folderPath, String id, String title})>
    >
    Function(List<String>)?
    notesFetcher,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#repairFts, [], {#notesFetcher: notesFetcher}),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  Map<String, dynamic> getMetrics() =>
      (super.noSuchMethod(
            Invocation.method(#getMetrics, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void resetMetrics() => super.noSuchMethod(
    Invocation.method(#resetMetrics, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AuthorizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthorizationService extends _i1.Mock
    implements _i12.AuthorizationService {
  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  String requireAuthenticatedUser({String? context}) =>
      (super.noSuchMethod(
            Invocation.method(#requireAuthenticatedUser, [], {
              #context: context,
            }),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#requireAuthenticatedUser, [], {
                #context: context,
              }),
            ),
            returnValueForMissingStub: _i8.dummyValue<String>(
              this,
              Invocation.method(#requireAuthenticatedUser, [], {
                #context: context,
              }),
            ),
          )
          as String);

  @override
  void verifyOwnership({
    required String? resourceUserId,
    required String? resourceType,
    required String? resourceId,
    String? operation = 'access',
  }) => super.noSuchMethod(
    Invocation.method(#verifyOwnership, [], {
      #resourceUserId: resourceUserId,
      #resourceType: resourceType,
      #resourceId: resourceId,
      #operation: operation,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void verifyBatchOwnership({
    required List<(String?, String)>? resources,
    required String? resourceType,
    String? operation = 'access',
  }) => super.noSuchMethod(
    Invocation.method(#verifyBatchOwnership, [], {
      #resources: resources,
      #resourceType: resourceType,
      #operation: operation,
    }),
    returnValueForMissingStub: null,
  );

  @override
  bool isOwner(String? resourceUserId) =>
      (super.noSuchMethod(
            Invocation.method(#isOwner, [resourceUserId]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);
}
